{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString, retrieve2 } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport lightTheme from '../theme/light.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error, warn } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nexport var version = '5.4.2';\nexport var dependencies = {\n  zrender: '5.4.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the beginning of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\nvar MessageCenter = /** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return MessageCenter;\n}(Eventful);\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\nvar ECharts = /** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n  function ECharts(dom,\n  // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultCoarsePointer = 'auto';\n    var defaultUseDirtyRect = false;\n    if (process.env.NODE_ENV !== 'production') {\n      var root = /* eslint-disable-next-line */\n      env.hasGlobalWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      defaultCoarsePointer = retrieve2(root.__ECHARTS__DEFAULT__COARSE_POINTER, defaultCoarsePointer);\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: retrieve2(opts.useDirtyRect, defaultUseDirtyRect),\n      useCoarsePointer: retrieve2(opts.useCoarsePointer, defaultCoarsePointer),\n      pointerSize: opts.pointerSize\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n      this._zr.flush();\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determined in the first frame (the\n        // frame is executed immediately after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain', {});\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n    }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n  ECharts.prototype.setTheme = function () {\n    deprecateLog('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */ || env.hasGlobalWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n    return this.renderToCanvas(opts);\n  };\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        warn('There is no specified series model');\n      }\n    }\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n              params = extend({}, ecData.eventData);\n              return true;\n            }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              warn('model or view can not be found by params');\n            }\n          }\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n      handler.zrEventfulCallAtLast = true;\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this.setOption({\n      series: []\n    }, true);\n  };\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._disposed = true;\n    var dom = this.getDom();\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n      return;\n    }\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._zr.resize(opts);\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n    if (!ecModel) {\n      return;\n    }\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n    this[IN_MAIN_PROCESS_KEY] = true;\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n    name = name || 'default';\n    this.hideLoading();\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Loading effects ' + name + ' not exists.');\n      }\n      return;\n    }\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n      return;\n    }\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embedded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh until user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n      function doPrepare(model) {\n        // By default view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) :\n          // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n        if (isExcluded) {\n          return;\n        }\n        ;\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n              focusSelf = _a.focusSelf,\n              dispatchers = _a.dispatchers;\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n        if (isExcluded) {\n          return;\n        }\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the original point.\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // determine whether to use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not required in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n          var componentView = _this.getViewOfComponentModel(componentModel);\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n      var ecModel = ecIns._model;\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n            queryOptionMap = _a.queryOptionMap,\n            mainTypeSpecified = _a.mainTypeSpecified;\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n      this[IN_MAIN_PROCESS_KEY] = false;\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatedly,\n        // so it should only be triggered when rendering indeed happens\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if (\n        // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n            lastSeriesKey_1 = '';\n          }\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // incremental render (always render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n      el.useStates(newStates);\n    }\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DON'T mark the element dirty. In case element is incremental and don't want to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n    ;\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n    ;\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't want to rerender.\n          // TODO, a more proper way?\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // Use highlighted and selected flag to toggle states.\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n    ;\n    createExtensionAPI = function (ecIns) {\n      return new ( /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n            el = el.parent;\n          }\n        };\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n  return ECharts;\n}(Eventful);\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n  function wrapped() {\n    var args2 = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('Instance ' + id + ' has been disposed');\n  }\n}\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n    var existInstance = getInstanceByDom(dom);\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('There is a chart instance already initialized on the dom.');\n      }\n      return existInstance;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backward compatibility\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (isFunction(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale.js';\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Builtin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};","map":{"version":3,"names":["__extends","zrender","assert","each","isFunction","isObject","indexOf","bind","clone","setAsPrimitive","extend","createHashMap","map","defaults","isDom","isArray","noop","isString","retrieve2","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","SeriesModel","ComponentView","ChartView","graphic","getECData","isHighDownDispatcher","HOVER_STATE_EMPHASIS","HOVER_STATE_BLUR","blurSeriesFromHighlightPayload","toggleSelectionFromPayload","updateSeriesElementSelection","getAllSelectedIndices","isSelectChangePayload","isHighDownPayload","HIGHLIGHT_ACTION_TYPE","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","savePathStates","enterEmphasis","leaveEmphasis","leaveBlur","enterSelect","leaveSelect","enterBlur","allLeaveBlur","findComponentHighDownDispatchers","blurComponent","handleGlobalMouseOverForHighDown","handleGlobalMouseOutForHighDown","modelUtil","throttle","seriesStyleTask","dataStyleTask","dataColorPaletteTask","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","ECEventProcessor","seriesSymbolTask","dataSymbolTask","getVisualFromData","getItemVisualFromData","deprecateLog","deprecateReplaceLog","error","warn","handleLegacySelectEvents","registerExternalTransform","createLocaleObject","SYSTEM_LANG","findEventDispatcher","decal","lifecycle","platformApi","setPlatformAPI","getImpl","version","dependencies","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","PENDING_UPDATE","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","isDisposed","disposedWarning","id","toLowercaseNameAndCallEventful","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","prototype","apply","MessageCenter","_super","messageCenterProto","on","off","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","render","renderComponents","renderSeries","createExtensionAPI","enableConnect","markStatusToUpdate","applyChangedStates","ECharts","dom","theme","opts","_this","call","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","themeStorage","_dom","defaultRenderer","defaultCoarsePointer","defaultUseDirtyRect","process","NODE_ENV","root","hasGlobalWindow","window","global","__ECHARTS__DEFAULT__RENDERER__","__ECHARTS__DEFAULT__COARSE_POINTER","devUseDirtyRect","__ECHARTS__DEFAULT__USE_DIRTY_RECT__","zr","_zr","init","renderer","devicePixelRatio","width","height","ssr","useDirtyRect","useCoarsePointer","pointerSize","_ssr","_throttledZrFlush","flush","_theme","_locale","locale","_coordSysMgr","api","_api","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","animation","_onframe","_disposed","scheduler","silent","update","updateParams","e","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","isSSR","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","transition","optionManager","optionPreprocessorFuncs","seriesTransition","optionChanged","wakeUp","setTheme","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","renderToCanvas","type","Error","backgroundColor","get","pixelRatio","renderToSVGString","renderToString","useViewBox","getSvgDataURL","svgSupported","list","storage","getDisplayList","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","createCanvas","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","Rect","shape","style","fill","img","Image","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","parseFinder","models","key","model","coordSys","coordinateSystem","containPoint","getVisual","visualType","parsedFinder","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","target","params","isGlobalOut","parent","ecData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","clear","series","dispose","setAttribute","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","dispatchAction","opt","actions","browser","weChat","updateLabelLayout","updatedSeries","appendData","internalField","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","i","__alive","doPrepare","eachSeries","requireNewView","__requireNewView","viewId","classType","Clazz","getClass","main","sub","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","concat","callView","query","condition","excludeSeriesId","excludeSeriesIdMap","normalizeToArray","modelId","convertOptionIdName","set","isExcluded","notBlur","_a","focusSelf","dispatchers","dispatcher","prepareAndUpdate","newOption","coordSysMgr","restoreData","create","clearColorPalette","darkMode","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","clearAllVisual","updateLayout","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","eventObjBatch","isSelectChange","isHighDown","batchItem","action","preParseFinder","queryOptionMap","mainTypeSpecified","componentMainType","keys","messageCenter","newObj","selected","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","allocateZlevels","componentZLevels","seriesZLevels","hasSeperateZLevel","zlevel","z","zlevelKey","getZLevelKey","idx","zLevels","lastSeriesZLevel_1","lastSeriesKey_1","setZLevel","dirtyList","clearStates","updateZ","updateStates","getSeries","updatePayload","dirty","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","traverse","isElementRemoved","applyElementStates","newStates","oldStates","currentStates","stateName","states","select","hoverState","emphasis","blur","useStates","elCount","isGroup","node","worker","preventUsingHoverLayer","eachRendered","hoverLayer","blendMode","blend","preventAutoZ","doUpdateZ","maxZ2","label","getTextContent","labelLine","getTextGuideLine","children","childrenRef","z2","isFinite","textGuideLineConfig","showAbove","textContent","textGuide","stateTransition","hasState","prevStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","Path","__dirty","class_1","getComponentByElement","modelInfo","highlightDigit","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","echartsProto","one","eventName","cb","ctx","wrapped","args2","idBase","groupIdBase","isClient","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","postInitFunc","registerUpdateLifecycle","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","coordSysCreator","register","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","slice","registerLocale","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","isNaN","wrap","__raw","stageHandler","wrapStageHandler","registerLoading","loadingFx","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","getMap","registerTransform","dataTool"],"sources":["F:/VUEProject/map-project/graduation_project/project/node_modules/echarts/lib/core/echarts.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString, retrieve2 } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport lightTheme from '../theme/light.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error, warn } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nexport var version = '5.4.2';\nexport var dependencies = {\n  zrender: '5.4.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the beginning of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultCoarsePointer = 'auto';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      env.hasGlobalWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      defaultCoarsePointer = retrieve2(root.__ECHARTS__DEFAULT__COARSE_POINTER, defaultCoarsePointer);\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: retrieve2(opts.useDirtyRect, defaultUseDirtyRect),\n      useCoarsePointer: retrieve2(opts.useCoarsePointer, defaultCoarsePointer),\n      pointerSize: opts.pointerSize\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determined in the first frame (the\n          // frame is executed immediately after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain', {});\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    deprecateLog('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || env.hasGlobalWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n\n    return this.renderToCanvas(opts);\n  };\n\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        warn('There is no specified series model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    var dom = this.getDom();\n\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embedded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh until user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By default view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the original point.\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // determine whether to use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not required in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatedly,\n        // so it should only be triggered when rendering indeed happens\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = '';\n          }\n\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // incremental render (always render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DON'T mark the element dirty. In case element is incremental and don't want to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n\n    ;\n\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't want to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // Use highlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n\n    var existInstance = getInstanceByDom(dom);\n\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('There is a chart instance already initialized on the dom.');\n      }\n\n      return existInstance;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backward compatibility\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (isFunction(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale.js';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Builtin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}