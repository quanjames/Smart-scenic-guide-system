{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isString } from 'zrender/lib/core/util.js';\nvar SankeyPathShape = /** @class */\nfunction () {\n  function SankeyPathShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.cpx1 = 0;\n    this.cpy1 = 0;\n    this.cpx2 = 0;\n    this.cpy2 = 0;\n    this.extent = 0;\n  }\n  return SankeyPathShape;\n}();\nvar SankeyPath = /** @class */\nfunction (_super) {\n  __extends(SankeyPath, _super);\n  function SankeyPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n  SankeyPath.prototype.getDefaultShape = function () {\n    return new SankeyPathShape();\n  };\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n    ctx.closePath();\n  };\n  SankeyPath.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n  SankeyPath.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n  return SankeyPath;\n}(graphic.Path);\nvar SankeyView = /** @class */\nfunction (_super) {\n  __extends(SankeyView, _super);\n  function SankeyView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = SankeyView.type;\n    _this._focusAdjacencyDisabled = false;\n    return _this;\n  }\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.x = layoutInfo.x;\n    group.y = layoutInfo.y; // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyPath();\n      var ecData = getECData(curve);\n      ecData.dataIndex = edge.dataIndex;\n      ecData.seriesIndex = seriesModel.seriesIndex;\n      ecData.dataType = 'edge';\n      var edgeModel = edge.getModel();\n      var lineStyleModel = edgeModel.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.useStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          curve.style.decal = edge.node1.getVisual('style').decal;\n          break;\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          curve.style.decal = edge.node2.getVisual('style').decal;\n          break;\n        case 'gradient':\n          var sourceColor = edge.node1.getVisual('color');\n          var targetColor = edge.node2.getVisual('color');\n          if (isString(sourceColor) && isString(targetColor)) {\n            curve.style.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\n              color: sourceColor,\n              offset: 0\n            }, {\n              color: targetColor,\n              offset: 1\n            }]);\n          }\n      }\n      setLabelStyle(curve, getLabelStatesModels(edgeModel, 'edgeLabel'), {\n        labelFetcher: seriesModel,\n        labelDataIndex: edge.dataIndex,\n        defaultText: \"\" + edgeModel.get('value')\n      });\n      curve.setTextConfig({\n        position: 'inside'\n      });\n      var emphasisModel = edgeModel.getModel('emphasis');\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\n        return model.getItemStyle();\n      });\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      getECData(curve).dataType = 'edge';\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var emphasisModel = itemModel.getModel('emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle(),\n        z2: 10\n      });\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id\n      });\n      rect.disableLabelAnimation = true;\n      rect.setStyle('fill', node.getVisual('color'));\n      rect.setStyle('decal', node.getVisual('style').decal);\n      setStatesStylesFromModel(rect, itemModel);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      getECData(rect).dataType = 'node';\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n    });\n    if (!this._data && seriesModel.isAnimationEnabled()) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n    this._data = seriesModel.getData();\n  };\n  SankeyView.prototype.dispose = function () {};\n  SankeyView.type = 'sankey';\n  return SankeyView;\n}(ChartView); // Add animation to the view\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\nexport default SankeyView;","map":{"version":3,"names":["__extends","graphic","enterEmphasis","leaveEmphasis","toggleHoverEmphasis","setStatesStylesFromModel","ChartView","setLabelStyle","getLabelStatesModels","getECData","isString","SankeyPathShape","x1","y1","x2","y2","cpx1","cpy1","cpx2","cpy2","extent","SankeyPath","_super","opts","call","prototype","getDefaultShape","buildPath","ctx","shape","moveTo","bezierCurveTo","orient","lineTo","closePath","highlight","downplay","Path","SankeyView","_this","apply","arguments","type","_focusAdjacencyDisabled","render","seriesModel","ecModel","api","sankeyView","graph","getGraph","group","layoutInfo","width","height","nodeData","getData","edgeData","get","_model","removeAll","x","y","eachEdge","edge","curve","ecData","dataIndex","seriesIndex","dataType","edgeModel","getModel","lineStyleModel","curvature","n1Layout","node1","getLayout","node1Model","dragX1","dragY1","n2Layout","node2","node2Model","dragX2","dragY2","edgeLayout","Math","max","dy","sy","ty","dx","setShape","useStyle","getItemStyle","style","fill","getVisual","decal","sourceColor","targetColor","LinearGradient","color","offset","labelFetcher","labelDataIndex","defaultText","setTextConfig","position","emphasisModel","model","add","setItemGraphicEl","focus","getAdjacentDataIndices","eachNode","node","layout","itemModel","dragX","dragY","rect","Rect","z2","id","disableLabelAnimation","setStyle","eachItemGraphicEl","el","getItemModel","drift","dirty","dispatchAction","seriesId","getRawIndex","localX","localY","ondragend","draggable","cursor","_data","isAnimationEnabled","setClipPath","createGridClipShape","getBoundingRect","removeClipPath","dispose","cb","rectEl","initProps"],"sources":["F:/idea_Project_2023/design_3/project/node_modules/echarts/lib/chart/sankey/SankeyView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isString } from 'zrender/lib/core/util.js';\n\nvar SankeyPathShape =\n/** @class */\nfunction () {\n  function SankeyPathShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.cpx1 = 0;\n    this.cpy1 = 0;\n    this.cpx2 = 0;\n    this.cpy2 = 0;\n    this.extent = 0;\n  }\n\n  return SankeyPathShape;\n}();\n\nvar SankeyPath =\n/** @class */\nfunction (_super) {\n  __extends(SankeyPath, _super);\n\n  function SankeyPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  SankeyPath.prototype.getDefaultShape = function () {\n    return new SankeyPathShape();\n  };\n\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  };\n\n  SankeyPath.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n\n  SankeyPath.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n\n  return SankeyPath;\n}(graphic.Path);\n\nvar SankeyView =\n/** @class */\nfunction (_super) {\n  __extends(SankeyView, _super);\n\n  function SankeyView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SankeyView.type;\n    _this._focusAdjacencyDisabled = false;\n    return _this;\n  }\n\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.x = layoutInfo.x;\n    group.y = layoutInfo.y; // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyPath();\n      var ecData = getECData(curve);\n      ecData.dataIndex = edge.dataIndex;\n      ecData.seriesIndex = seriesModel.seriesIndex;\n      ecData.dataType = 'edge';\n      var edgeModel = edge.getModel();\n      var lineStyleModel = edgeModel.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.useStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          curve.style.decal = edge.node1.getVisual('style').decal;\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          curve.style.decal = edge.node2.getVisual('style').decal;\n          break;\n\n        case 'gradient':\n          var sourceColor = edge.node1.getVisual('color');\n          var targetColor = edge.node2.getVisual('color');\n\n          if (isString(sourceColor) && isString(targetColor)) {\n            curve.style.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\n              color: sourceColor,\n              offset: 0\n            }, {\n              color: targetColor,\n              offset: 1\n            }]);\n          }\n\n      }\n\n      setLabelStyle(curve, getLabelStatesModels(edgeModel, 'edgeLabel'), {\n        labelFetcher: seriesModel,\n        labelDataIndex: edge.dataIndex,\n        defaultText: \"\" + edgeModel.get('value')\n      });\n      curve.setTextConfig({\n        position: 'inside'\n      });\n      var emphasisModel = edgeModel.getModel('emphasis');\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\n        return model.getItemStyle();\n      });\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      getECData(curve).dataType = 'edge';\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var emphasisModel = itemModel.getModel('emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle(),\n        z2: 10\n      });\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id\n      });\n      rect.disableLabelAnimation = true;\n      rect.setStyle('fill', node.getVisual('color'));\n      rect.setStyle('decal', node.getVisual('style').decal);\n      setStatesStylesFromModel(rect, itemModel);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      getECData(rect).dataType = 'node';\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n    });\n\n    if (!this._data && seriesModel.isAnimationEnabled()) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  };\n\n  SankeyView.prototype.dispose = function () {};\n\n  SankeyView.type = 'sankey';\n  return SankeyView;\n}(ChartView); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nexport default SankeyView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}