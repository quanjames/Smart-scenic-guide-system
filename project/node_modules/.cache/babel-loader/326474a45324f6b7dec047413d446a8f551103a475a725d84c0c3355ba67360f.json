{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport axisDefault from './axisDefault.js';\nimport { getLayoutParams, mergeLayoutParam, fetchLayoutMode } from '../util/layout.js';\nimport OrdinalMeta from '../data/OrdinalMeta.js';\nimport { AXIS_TYPES } from './axisCommonTypes.js';\nimport { each, merge } from 'zrender/lib/core/util.js';\n/**\n * Generate sub axis model class\n * @param axisName 'x' 'y' 'radius' 'angle' 'parallel' ...\n */\n\nexport default function axisModelCreator(registers, axisName, BaseAxisModelClass, extraDefaultOption) {\n  each(AXIS_TYPES, function (v, axisType) {\n    var defaultOption = merge(merge({}, axisDefault[axisType], true), extraDefaultOption, true);\n    var AxisModel = /** @class */\n    function (_super) {\n      __extends(AxisModel, _super);\n      function AxisModel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = axisName + 'Axis.' + axisType;\n        return _this;\n      }\n      AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n        var layoutMode = fetchLayoutMode(this);\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        merge(option, themeModel.get(axisType + 'Axis'));\n        merge(option, this.getDefaultOption());\n        option.type = getAxisType(option);\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      };\n      AxisModel.prototype.optionUpdated = function () {\n        var thisOption = this.option;\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      };\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n\n      AxisModel.prototype.getCategories = function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n          return this.__ordinalMeta.categories;\n        }\n      };\n      AxisModel.prototype.getOrdinalMeta = function () {\n        return this.__ordinalMeta;\n      };\n      AxisModel.type = axisName + 'Axis.' + axisType;\n      AxisModel.defaultOption = defaultOption;\n      return AxisModel;\n    }(BaseAxisModelClass);\n    registers.registerComponentModel(AxisModel);\n  });\n  registers.registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\n}\nfunction getAxisType(option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}","map":{"version":3,"names":["__extends","axisDefault","getLayoutParams","mergeLayoutParam","fetchLayoutMode","OrdinalMeta","AXIS_TYPES","each","merge","axisModelCreator","registers","axisName","BaseAxisModelClass","extraDefaultOption","v","axisType","defaultOption","AxisModel","_super","_this","apply","arguments","type","prototype","mergeDefaultAndTheme","option","ecModel","layoutMode","inputPositionParams","themeModel","getTheme","get","getDefaultOption","getAxisType","optionUpdated","thisOption","__ordinalMeta","createByAxisModel","getCategories","rawData","data","categories","getOrdinalMeta","registerComponentModel","registerSubTypeDefaulter"],"sources":["F:/VUEProject/map-project/design_4/project/node_modules/echarts/lib/coord/axisModelCreator.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport axisDefault from './axisDefault.js';\nimport { getLayoutParams, mergeLayoutParam, fetchLayoutMode } from '../util/layout.js';\nimport OrdinalMeta from '../data/OrdinalMeta.js';\nimport { AXIS_TYPES } from './axisCommonTypes.js';\nimport { each, merge } from 'zrender/lib/core/util.js';\n/**\n * Generate sub axis model class\n * @param axisName 'x' 'y' 'radius' 'angle' 'parallel' ...\n */\n\nexport default function axisModelCreator(registers, axisName, BaseAxisModelClass, extraDefaultOption) {\n  each(AXIS_TYPES, function (v, axisType) {\n    var defaultOption = merge(merge({}, axisDefault[axisType], true), extraDefaultOption, true);\n\n    var AxisModel =\n    /** @class */\n    function (_super) {\n      __extends(AxisModel, _super);\n\n      function AxisModel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n\n        _this.type = axisName + 'Axis.' + axisType;\n        return _this;\n      }\n\n      AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n        var layoutMode = fetchLayoutMode(this);\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        merge(option, themeModel.get(axisType + 'Axis'));\n        merge(option, this.getDefaultOption());\n        option.type = getAxisType(option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      };\n\n      AxisModel.prototype.optionUpdated = function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      };\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n\n\n      AxisModel.prototype.getCategories = function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      };\n\n      AxisModel.prototype.getOrdinalMeta = function () {\n        return this.__ordinalMeta;\n      };\n\n      AxisModel.type = axisName + 'Axis.' + axisType;\n      AxisModel.defaultOption = defaultOption;\n      return AxisModel;\n    }(BaseAxisModelClass);\n\n    registers.registerComponentModel(AxisModel);\n  });\n  registers.registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\n}\n\nfunction getAxisType(option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}