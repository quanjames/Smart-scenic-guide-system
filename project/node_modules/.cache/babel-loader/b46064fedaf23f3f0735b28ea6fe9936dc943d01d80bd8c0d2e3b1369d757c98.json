{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\nvar LegendView = /** @class */\nfunction (_super) {\n  __extends(LegendView, _super);\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    } // selector has been normalized to an array in model\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw(); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group(); // @ts-ignore\n\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      } // Representitive series.\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n      if (legendDrawnMap.get(name)) {\n        // Have been drawn\n        return;\n      } // Legend to control series.\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n\n        var style = data.getVisual('style');\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n            if (!provider.containName(name)) {\n              return;\n            }\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api); // FIXME: consider different series has items with the same name.\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n    var inactiveColor = legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup); // @ts-ignore\n\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box(\n      // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } // Always align selector to content as 'middle'\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  } // itemStyle\n\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n  handleCommonProps(itemStyle, itemVisualStyle); // lineStyle\n\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle); // Fix auto color to real color\n\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n  return icon;\n}\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n  // TODO highlight immediately may cause animation loss.\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n  return emphasisState && emphasisState.hoverLayer;\n}\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nexport default LegendView;","map":{"version":3,"names":["__extends","zrUtil","parse","stringify","graphic","enableHoverEmphasis","setLabelStyle","createTextStyle","makeBackground","layoutUtil","ComponentView","createSymbol","createOrUpdatePatternFromDecal","curry","each","Group","LegendView","_super","_this","apply","arguments","type","newlineDisabled","prototype","init","group","add","_contentGroup","_selectorGroup","_isFirstRender","getContentGroup","getSelectorGroup","render","legendModel","ecModel","api","isFirstRender","resetInner","get","itemAlign","orient","selector","selectorPosition","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","height","getHeight","padding","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","x","y","markRedraw","_backgroundEl","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","excludeSeriesId","eachRawSeries","seriesModel","push","id","getData","legendItemModel","dataIndex","name","g","newline","getSeriesByName","data","lineVisualStyle","getVisual","legendIcon","style","itemGroup","_createItem","on","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","set","legendVisualProvider","provider","containName","idx","indexOfName","getItemVisual","colorArr","fill","extend","process","env","NODE_ENV","console","warn","_createSelector","selectorGroup","createSelectorButton","selectorItem","labelText","Text","align","verticalAlign","onclick","dispatchAction","labelModel","getModel","emphasisLabelModel","normal","emphasis","defaultText","title","itemVisualStyle","drawType","visualDrawType","itemWidth","itemHeight","isSelected","iconRotate","symbolKeepAspect","legendIconType","getLegendStyle","textStyleModel","isFunction","getLegendIcon","icon","itemStyle","lineStyle","rotate","getDefaultLegendIcon","textX","textAlign","formatter","content","isString","replace","inactiveColor","text","getTextColor","hitRect","Rect","shape","getBoundingRect","invisible","tooltipModel","setTooltipConfig","el","componentModel","itemName","itemTooltipOption","option","eachChild","child","silent","__legendDataIndex","box","contentRect","contentPos","selectorRect","selectorPos","selectorButtonGap","orientIdx","getOrient","index","wh","hw","yx","Math","max","min","iconType","handleCommonProps","visualStyle","lineWidth","propVal","propName","itemStyleModel","getItemStyle","iconBrushType","lastIndexOf","decalStyle","getShallow","decal","stroke","opacity","legendLineModel","getLineStyle","borderWidth","visualHasBorder","opt","symboType","setStyle","rotation","PI","setOrigin","indexOf","seriesName","dataName","isUseHoverLayer","list","getZr","storage","getDisplayList","emphasisState","i","len","length","states","hoverLayer"],"sources":["F:/VUEProject/map-project/graduation_project/project/node_modules/echarts/lib/component/legend/LegendView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar LegendView =\n/** @class */\nfunction (_super) {\n  __extends(LegendView, _super);\n\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n\n\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    } // selector has been normalized to an array in model\n\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw(); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group(); // @ts-ignore\n\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawn\n        return;\n      } // Legend to control series.\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n\n        var style = data.getVisual('style');\n\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n\n            if (!provider.containName(name)) {\n              return;\n            }\n\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n\n    var inactiveColor = legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup); // @ts-ignore\n\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } // Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\n\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  } // itemStyle\n\n\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n\n  handleCommonProps(itemStyle, itemVisualStyle); // lineStyle\n\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle); // Fix auto color to real color\n\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\n\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n\n  return icon;\n}\n\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n  // TODO highlight immediately may cause animation loss.\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\n\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n\n  return emphasisState && emphasisState.hoverLayer;\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nexport default LegendView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}