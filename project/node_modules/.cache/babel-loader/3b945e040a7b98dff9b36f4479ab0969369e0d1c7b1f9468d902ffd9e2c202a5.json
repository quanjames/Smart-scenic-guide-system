{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert, map } from 'zrender/lib/core/util.js';\nimport { VISUAL_DIMENSIONS } from '../../util/types.js';\nvar DimensionUserOuput = /** @class */\nfunction () {\n  function DimensionUserOuput(encode, dimRequest) {\n    this._encode = encode;\n    this._schema = dimRequest;\n  }\n  DimensionUserOuput.prototype.get = function () {\n    return {\n      // Do not generate full dimension name until fist used.\n      fullDimensions: this._getFullDimensionNames(),\n      encode: this._encode\n    };\n  };\n  /**\n   * Get all data store dimension names.\n   * Theoretically a series data store is defined both by series and used dataset (if any).\n   * If some dimensions are omitted for performance reason in `this.dimensions`,\n   * the dimension name may not be auto-generated if user does not specify a dimension name.\n   * In this case, the dimension name is `null`/`undefined`.\n   */\n\n  DimensionUserOuput.prototype._getFullDimensionNames = function () {\n    if (!this._cachedDimNames) {\n      this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : [];\n    }\n    return this._cachedDimNames;\n  };\n  return DimensionUserOuput;\n}();\n;\nexport function summarizeDimensions(data, schema) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  var userOutputEncode = {};\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n        getOrCreateEncodeArr(userOutputEncode, coordDim)[coordDimIndex] = data.getDimensionIndex(dimItem.name);\n      }\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.dataDimIndicesOnCoord = map(dataDimsOnCoord, function (dimName) {\n    return data.getDimensionInfo(dimName).storeDimIndex;\n  });\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommended, because formatter cannot be set\n  // in this way. Use label.formatter instead. Maybe remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n  var encodeTooltip = encode.tooltip;\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  summary.userOutput = new DimensionUserOuput(userOutputEncode, schema);\n  return summary;\n}\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }","map":{"version":3,"names":["each","createHashMap","assert","map","VISUAL_DIMENSIONS","DimensionUserOuput","encode","dimRequest","_encode","_schema","prototype","get","fullDimensions","_getFullDimensionNames","_cachedDimNames","makeOutputDimensionNames","summarizeDimensions","data","schema","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","userOutputEncode","dimensions","dimName","dimItem","getDimensionInfo","coordDim","process","env","NODE_ENV","coordDimIndex","getOrCreateEncodeArr","isExtraCoord","set","mayLabelDimType","type","getDimensionIndex","name","defaultTooltip","push","v","otherDim","encodeArr","dimIndex","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","concat","dataDimIndicesOnCoord","storeDimIndex","encodeLabel","label","length","slice","encodeTooltip","tooltip","userOutput","dim","hasOwnProperty","getDimensionTypeByAxis","axisType","dimType"],"sources":["F:/VUEProject/map-project/design_4/project/node_modules/echarts/lib/data/helper/dimensionHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert, map } from 'zrender/lib/core/util.js';\nimport { VISUAL_DIMENSIONS } from '../../util/types.js';\n\nvar DimensionUserOuput =\n/** @class */\nfunction () {\n  function DimensionUserOuput(encode, dimRequest) {\n    this._encode = encode;\n    this._schema = dimRequest;\n  }\n\n  DimensionUserOuput.prototype.get = function () {\n    return {\n      // Do not generate full dimension name until fist used.\n      fullDimensions: this._getFullDimensionNames(),\n      encode: this._encode\n    };\n  };\n  /**\n   * Get all data store dimension names.\n   * Theoretically a series data store is defined both by series and used dataset (if any).\n   * If some dimensions are omitted for performance reason in `this.dimensions`,\n   * the dimension name may not be auto-generated if user does not specify a dimension name.\n   * In this case, the dimension name is `null`/`undefined`.\n   */\n\n\n  DimensionUserOuput.prototype._getFullDimensionNames = function () {\n    if (!this._cachedDimNames) {\n      this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : [];\n    }\n\n    return this._cachedDimNames;\n  };\n\n  return DimensionUserOuput;\n}();\n\n;\nexport function summarizeDimensions(data, schema) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  var userOutputEncode = {};\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutputEncode, coordDim)[coordDimIndex] = data.getDimensionIndex(dimItem.name);\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.dataDimIndicesOnCoord = map(dataDimsOnCoord, function (dimName) {\n    return data.getDimensionInfo(dimName).storeDimIndex;\n  });\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommended, because formatter cannot be set\n  // in this way. Use label.formatter instead. Maybe remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  summary.userOutput = new DimensionUserOuput(userOutputEncode, schema);\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}