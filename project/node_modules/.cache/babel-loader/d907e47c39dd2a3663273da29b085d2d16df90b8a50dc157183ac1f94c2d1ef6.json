{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parseClassType } from './clazz.js';\nimport { makePrintable } from './log.js'; // A random offset\n\nvar base = Math.round(Math.random() * 10);\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nexport function getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++].join('_');\n}\n/**\n * Implements `SubTypeDefaulterManager` for `target`.\n */\n\nexport function enableSubTypeDefaulter(target) {\n  var subTypeDefaulters = {};\n  target.registerSubTypeDefaulter = function (componentType, defaulter) {\n    var componentTypeInfo = parseClassType(componentType);\n    subTypeDefaulters[componentTypeInfo.main] = defaulter;\n  };\n  target.determineSubType = function (componentType, option) {\n    var type = option.type;\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n      if (target.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n    return type;\n  };\n}\n/**\n * Implements `TopologicalTravelable<any>` for `entity`.\n *\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n * If there is circular dependencey, Error will be thrown.\n */\n\nexport function enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @param targetNameList Target Component type list.\n   *                       Can be ['aa', 'bb', 'aa.xx']\n   * @param fullNameList By which we can build dependency graph.\n   * @param callback Params: componentType, dependencies.\n   * @param context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var noEntryList = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n    while (noEntryList.length) {\n      var currComponentType = noEntryList.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n    zrUtil.each(targetNameSet, function () {\n      var errMsg = '';\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = makePrintable('Circular dependency may exists: ', targetNameSet, targetNameList, fullNameList);\n      }\n      throw new Error(errMsg);\n    });\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n      if (graph[succComponentType].entryCount === 0) {\n        noEntryList.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n    return graph[name];\n  }\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\nexport function inheritDefaultOption(superOption, subOption) {\n  // See also `model/Component.ts#getDefaultOption`\n  return zrUtil.merge(zrUtil.merge({}, superOption, true), subOption, true);\n}","map":{"version":3,"names":["zrUtil","parseClassType","makePrintable","base","Math","round","random","getUID","type","join","enableSubTypeDefaulter","target","subTypeDefaulters","registerSubTypeDefaulter","componentType","defaulter","componentTypeInfo","main","determineSubType","option","componentTypeMain","hasSubTypes","enableTopologicalTravel","entity","dependencyGetter","topologicalTravel","targetNameList","fullNameList","callback","context","length","result","makeDepndencyGraph","graph","noEntryList","targetNameSet","each","name","currComponentType","pop","currVertex","isInTargetNameSet","call","originalDeps","slice","successor","removeEdgeAndAdd","removeEdge","errMsg","process","env","NODE_ENV","Error","succComponentType","entryCount","push","thisItem","createDependencyGraphItem","availableDeps","getAvailableDependencies","dependentName","indexOf","predecessor","thatItem","dep","inheritDefaultOption","superOption","subOption","merge"],"sources":["F:/VUEProject/map-project/design_4/project/node_modules/echarts/lib/util/component.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parseClassType } from './clazz.js';\nimport { makePrintable } from './log.js'; // A random offset\n\nvar base = Math.round(Math.random() * 10);\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nexport function getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++].join('_');\n}\n/**\n * Implements `SubTypeDefaulterManager` for `target`.\n */\n\nexport function enableSubTypeDefaulter(target) {\n  var subTypeDefaulters = {};\n\n  target.registerSubTypeDefaulter = function (componentType, defaulter) {\n    var componentTypeInfo = parseClassType(componentType);\n    subTypeDefaulters[componentTypeInfo.main] = defaulter;\n  };\n\n  target.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (target.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n}\n/**\n * Implements `TopologicalTravelable<any>` for `entity`.\n *\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n * If there is circular dependencey, Error will be thrown.\n */\n\nexport function enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @param targetNameList Target Component type list.\n   *                       Can be ['aa', 'bb', 'aa.xx']\n   * @param fullNameList By which we can build dependency graph.\n   * @param callback Params: componentType, dependencies.\n   * @param context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var noEntryList = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (noEntryList.length) {\n      var currComponentType = noEntryList.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = makePrintable('Circular dependency may exists: ', targetNameSet, targetNameList, fullNameList);\n      }\n\n      throw new Error(errMsg);\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        noEntryList.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\nexport function inheritDefaultOption(superOption, subOption) {\n  // See also `model/Component.ts#getDefaultOption`\n  return zrUtil.merge(zrUtil.merge({}, superOption, true), subOption, true);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}