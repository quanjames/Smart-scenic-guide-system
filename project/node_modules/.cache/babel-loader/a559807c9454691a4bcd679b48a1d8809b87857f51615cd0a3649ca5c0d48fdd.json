{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport EffectSymbol from '../helper/EffectSymbol.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport pointsLayout from '../../layout/points.js';\nimport ChartView from '../../view/Chart.js';\nvar EffectScatterView = /** @class */\nfunction (_super) {\n  __extends(EffectScatterView, _super);\n  function EffectScatterView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = EffectScatterView.type;\n    return _this;\n  }\n  EffectScatterView.prototype.init = function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  };\n  EffectScatterView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data, {\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this.group.add(effectSymbolDraw.group);\n  };\n  EffectScatterView.prototype._getClipShape = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  };\n  EffectScatterView.prototype.updateTransform = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout('').reset(seriesModel, ecModel, api);\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count(),\n        count: data.count()\n      }, data);\n    }\n    this._symbolDraw.updateLayout();\n  };\n  EffectScatterView.prototype._updateGroupTransform = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  };\n  EffectScatterView.prototype.remove = function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n  };\n  EffectScatterView.type = 'effectScatter';\n  return EffectScatterView;\n}(ChartView);\nexport default EffectScatterView;","map":{"version":3,"names":["__extends","SymbolDraw","EffectSymbol","matrix","pointsLayout","ChartView","EffectScatterView","_super","_this","apply","arguments","type","prototype","init","_symbolDraw","render","seriesModel","ecModel","api","data","getData","effectSymbolDraw","updateData","clipShape","_getClipShape","group","add","coordSys","coordinateSystem","clipArea","getArea","get","updateTransform","dirty","res","reset","progress","start","end","count","updateLayout","_updateGroupTransform","getRoamTransform","transform","clone","decomposeTransform","remove"],"sources":["F:/idea_Project_2023/design_3/project/node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport EffectSymbol from '../helper/EffectSymbol.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport pointsLayout from '../../layout/points.js';\nimport ChartView from '../../view/Chart.js';\n\nvar EffectScatterView =\n/** @class */\nfunction (_super) {\n  __extends(EffectScatterView, _super);\n\n  function EffectScatterView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = EffectScatterView.type;\n    return _this;\n  }\n\n  EffectScatterView.prototype.init = function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  };\n\n  EffectScatterView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data, {\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this.group.add(effectSymbolDraw.group);\n  };\n\n  EffectScatterView.prototype._getClipShape = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  };\n\n  EffectScatterView.prototype.updateTransform = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout('').reset(seriesModel, ecModel, api);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count(),\n        count: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout();\n  };\n\n  EffectScatterView.prototype._updateGroupTransform = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  };\n\n  EffectScatterView.prototype.remove = function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n  };\n\n  EffectScatterView.type = 'effectScatter';\n  return EffectScatterView;\n}(ChartView);\n\nexport default EffectScatterView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}