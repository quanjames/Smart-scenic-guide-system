{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport Path from '../graphic/Path.js';\nimport PathProxy from '../core/PathProxy.js';\nimport transformPath from './transformPath.js';\nimport { extend } from '../core/util.js';\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nfunction vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n;\nfunction vRatio(u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n}\n;\nfunction vAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n}\n;\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n  if (dTheta < 0) {\n    var n = Math.round(dTheta / PI * 1e6) / 1e6;\n    dTheta = PI * 2 + n % 2 * PI;\n  }\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\nvar commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig;\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g;\nfunction createPathProxyFromString(data) {\n  var path = new PathProxy();\n  if (!data) {\n    return path;\n  }\n  var cpx = 0;\n  var cpy = 0;\n  var subpathX = cpx;\n  var subpathY = cpy;\n  var prevCmd;\n  var CMD = PathProxy.CMD;\n  var cmdList = data.match(commandReg);\n  if (!cmdList) {\n    return path;\n  }\n  for (var l = 0; l < cmdList.length; l++) {\n    var cmdText = cmdList[l];\n    var cmdStr = cmdText.charAt(0);\n    var cmd = void 0;\n    var p = cmdText.match(numberReg) || [];\n    var pLen = p.length;\n    for (var i = 0; i < pLen; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n    var off = 0;\n    while (off < pLen) {\n      var ctlPtx = void 0;\n      var ctlPty = void 0;\n      var rx = void 0;\n      var ry = void 0;\n      var psi = void 0;\n      var fa = void 0;\n      var fs = void 0;\n      var x1 = cpx;\n      var y1 = cpy;\n      var len = void 0;\n      var pathData = void 0;\n      switch (cmdStr) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          subpathX = cpx;\n          subpathY = cpy;\n          cmdStr = 'l';\n          break;\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          subpathX = cpx;\n          subpathY = cpy;\n          cmdStr = 'L';\n          break;\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          len = path.len();\n          pathData = path.data;\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          len = path.len();\n          pathData = path.data;\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          len = path.len();\n          pathData = path.data;\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          len = path.len();\n          pathData = path.data;\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n    if (cmdStr === 'z' || cmdStr === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n      cpx = subpathX;\n      cpy = subpathY;\n    }\n    prevCmd = cmd;\n  }\n  path.toStatic();\n  return path;\n}\nvar SVGPath = function (_super) {\n  __extends(SVGPath, _super);\n  function SVGPath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SVGPath.prototype.applyTransform = function (m) {};\n  return SVGPath;\n}(Path);\nfunction isPathProxy(path) {\n  return path.setData != null;\n}\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  var innerOpts = extend({}, opts);\n  innerOpts.buildPath = function (path) {\n    if (isPathProxy(path)) {\n      path.setData(pathProxy.data);\n      var ctx = path.getContext();\n      if (ctx) {\n        path.rebuildPath(ctx, 1);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx, 1);\n    }\n  };\n  innerOpts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirtyShape();\n  };\n  return innerOpts;\n}\nexport function createFromString(str, opts) {\n  return new SVGPath(createPathOptions(str, opts));\n}\nexport function extendFromString(str, defaultOpts) {\n  var innerOpts = createPathOptions(str, defaultOpts);\n  var Sub = function (_super) {\n    __extends(Sub, _super);\n    function Sub(opts) {\n      var _this = _super.call(this, opts) || this;\n      _this.applyTransform = innerOpts.applyTransform;\n      _this.buildPath = innerOpts.buildPath;\n      return _this;\n    }\n    return Sub;\n  }(SVGPath);\n  return Sub;\n}\nexport function mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n    pathList.push(pathEl.getUpdatedPathProxy(true));\n  }\n  var pathBundle = new Path(opts);\n  pathBundle.createPathProxy();\n  pathBundle.buildPath = function (path) {\n    if (isPathProxy(path)) {\n      path.appendPath(pathList);\n      var ctx = path.getContext();\n      if (ctx) {\n        path.rebuildPath(ctx, 1);\n      }\n    }\n  };\n  return pathBundle;\n}\nexport function clonePath(sourcePath, opts) {\n  opts = opts || {};\n  var path = new Path();\n  if (sourcePath.shape) {\n    path.setShape(sourcePath.shape);\n  }\n  path.setStyle(sourcePath.style);\n  if (opts.bakeTransform) {\n    transformPath(path.path, sourcePath.getComputedTransform());\n  } else {\n    if (opts.toLocal) {\n      path.setLocalTransform(sourcePath.getComputedTransform());\n    } else {\n      path.copyTransform(sourcePath);\n    }\n  }\n  path.buildPath = sourcePath.buildPath;\n  path.applyTransform = path.applyTransform;\n  path.z = sourcePath.z;\n  path.z2 = sourcePath.z2;\n  path.zlevel = sourcePath.zlevel;\n  return path;\n}","map":{"version":3,"names":["__extends","Path","PathProxy","transformPath","extend","mathSqrt","Math","sqrt","mathSin","sin","mathCos","cos","PI","vMag","v","vRatio","u","vAngle","acos","processArc","x1","y1","x2","y2","fa","fs","rx","ry","psiDeg","cmd","path","psi","xp","yp","lambda","f","cxp","cyp","cx","cy","theta","dTheta","n","round","addData","commandReg","numberReg","createPathProxyFromString","data","cpx","cpy","subpathX","subpathY","prevCmd","CMD","cmdList","match","l","length","cmdText","cmdStr","charAt","p","pLen","i","parseFloat","off","ctlPtx","ctlPty","len","pathData","L","M","C","Q","A","Z","toStatic","SVGPath","_super","apply","arguments","prototype","applyTransform","m","isPathProxy","setData","createPathOptions","str","opts","pathProxy","innerOpts","buildPath","ctx","getContext","rebuildPath","dirtyShape","createFromString","extendFromString","defaultOpts","Sub","_this","call","mergePath","pathEls","pathList","pathEl","push","getUpdatedPathProxy","pathBundle","createPathProxy","appendPath","clonePath","sourcePath","shape","setShape","setStyle","style","bakeTransform","getComputedTransform","toLocal","setLocalTransform","copyTransform","z","z2","zlevel"],"sources":["F:/VUEProject/map-project/design_4/project/node_modules/zrender/lib/tool/path.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Path from '../graphic/Path.js';\nimport PathProxy from '../core/PathProxy.js';\nimport transformPath from './transformPath.js';\nimport { extend } from '../core/util.js';\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nfunction vMag(v) {\n    return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n;\nfunction vRatio(u, v) {\n    return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n}\n;\nfunction vAngle(u, v) {\n    return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n        * Math.acos(vRatio(u, v));\n}\n;\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n    var psi = psiDeg * (PI / 180.0);\n    var xp = mathCos(psi) * (x1 - x2) / 2.0\n        + mathSin(psi) * (y1 - y2) / 2.0;\n    var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n        + mathCos(psi) * (y1 - y2) / 2.0;\n    var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n    if (lambda > 1) {\n        rx *= mathSqrt(lambda);\n        ry *= mathSqrt(lambda);\n    }\n    var f = (fa === fs ? -1 : 1)\n        * mathSqrt((((rx * rx) * (ry * ry))\n            - ((rx * rx) * (yp * yp))\n            - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n            + (ry * ry) * (xp * xp))) || 0;\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n    var cx = (x1 + x2) / 2.0\n        + mathCos(psi) * cxp\n        - mathSin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0\n        + mathSin(psi) * cxp\n        + mathCos(psi) * cyp;\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n    if (vRatio(u, v) <= -1) {\n        dTheta = PI;\n    }\n    if (vRatio(u, v) >= 1) {\n        dTheta = 0;\n    }\n    if (dTheta < 0) {\n        var n = Math.round(dTheta / PI * 1e6) / 1e6;\n        dTheta = PI * 2 + (n % 2) * PI;\n    }\n    path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\nvar commandReg = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig;\nvar numberReg = /-?([0-9]*\\.)?[0-9]+([eE]-?[0-9]+)?/g;\nfunction createPathProxyFromString(data) {\n    var path = new PathProxy();\n    if (!data) {\n        return path;\n    }\n    var cpx = 0;\n    var cpy = 0;\n    var subpathX = cpx;\n    var subpathY = cpy;\n    var prevCmd;\n    var CMD = PathProxy.CMD;\n    var cmdList = data.match(commandReg);\n    if (!cmdList) {\n        return path;\n    }\n    for (var l = 0; l < cmdList.length; l++) {\n        var cmdText = cmdList[l];\n        var cmdStr = cmdText.charAt(0);\n        var cmd = void 0;\n        var p = cmdText.match(numberReg) || [];\n        var pLen = p.length;\n        for (var i = 0; i < pLen; i++) {\n            p[i] = parseFloat(p[i]);\n        }\n        var off = 0;\n        while (off < pLen) {\n            var ctlPtx = void 0;\n            var ctlPty = void 0;\n            var rx = void 0;\n            var ry = void 0;\n            var psi = void 0;\n            var fa = void 0;\n            var fs = void 0;\n            var x1 = cpx;\n            var y1 = cpy;\n            var len = void 0;\n            var pathData = void 0;\n            switch (cmdStr) {\n                case 'l':\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'L':\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'm':\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.M;\n                    path.addData(cmd, cpx, cpy);\n                    subpathX = cpx;\n                    subpathY = cpy;\n                    cmdStr = 'l';\n                    break;\n                case 'M':\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.M;\n                    path.addData(cmd, cpx, cpy);\n                    subpathX = cpx;\n                    subpathY = cpy;\n                    cmdStr = 'L';\n                    break;\n                case 'h':\n                    cpx += p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'H':\n                    cpx = p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'v':\n                    cpy += p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'V':\n                    cpy = p[off++];\n                    cmd = CMD.L;\n                    path.addData(cmd, cpx, cpy);\n                    break;\n                case 'C':\n                    cmd = CMD.C;\n                    path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n                    cpx = p[off - 2];\n                    cpy = p[off - 1];\n                    break;\n                case 'c':\n                    cmd = CMD.C;\n                    path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n                    cpx += p[off - 2];\n                    cpy += p[off - 1];\n                    break;\n                case 'S':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.C) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cmd = CMD.C;\n                    x1 = p[off++];\n                    y1 = p[off++];\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                    break;\n                case 's':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.C) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cmd = CMD.C;\n                    x1 = cpx + p[off++];\n                    y1 = cpy + p[off++];\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                    break;\n                case 'Q':\n                    x1 = p[off++];\n                    y1 = p[off++];\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, x1, y1, cpx, cpy);\n                    break;\n                case 'q':\n                    x1 = p[off++] + cpx;\n                    y1 = p[off++] + cpy;\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, x1, y1, cpx, cpy);\n                    break;\n                case 'T':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.Q) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                    break;\n                case 't':\n                    ctlPtx = cpx;\n                    ctlPty = cpy;\n                    len = path.len();\n                    pathData = path.data;\n                    if (prevCmd === CMD.Q) {\n                        ctlPtx += cpx - pathData[len - 4];\n                        ctlPty += cpy - pathData[len - 3];\n                    }\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.Q;\n                    path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                    break;\n                case 'A':\n                    rx = p[off++];\n                    ry = p[off++];\n                    psi = p[off++];\n                    fa = p[off++];\n                    fs = p[off++];\n                    x1 = cpx, y1 = cpy;\n                    cpx = p[off++];\n                    cpy = p[off++];\n                    cmd = CMD.A;\n                    processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n                    break;\n                case 'a':\n                    rx = p[off++];\n                    ry = p[off++];\n                    psi = p[off++];\n                    fa = p[off++];\n                    fs = p[off++];\n                    x1 = cpx, y1 = cpy;\n                    cpx += p[off++];\n                    cpy += p[off++];\n                    cmd = CMD.A;\n                    processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n                    break;\n            }\n        }\n        if (cmdStr === 'z' || cmdStr === 'Z') {\n            cmd = CMD.Z;\n            path.addData(cmd);\n            cpx = subpathX;\n            cpy = subpathY;\n        }\n        prevCmd = cmd;\n    }\n    path.toStatic();\n    return path;\n}\nvar SVGPath = (function (_super) {\n    __extends(SVGPath, _super);\n    function SVGPath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SVGPath.prototype.applyTransform = function (m) { };\n    return SVGPath;\n}(Path));\nfunction isPathProxy(path) {\n    return path.setData != null;\n}\nfunction createPathOptions(str, opts) {\n    var pathProxy = createPathProxyFromString(str);\n    var innerOpts = extend({}, opts);\n    innerOpts.buildPath = function (path) {\n        if (isPathProxy(path)) {\n            path.setData(pathProxy.data);\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx, 1);\n            }\n        }\n        else {\n            var ctx = path;\n            pathProxy.rebuildPath(ctx, 1);\n        }\n    };\n    innerOpts.applyTransform = function (m) {\n        transformPath(pathProxy, m);\n        this.dirtyShape();\n    };\n    return innerOpts;\n}\nexport function createFromString(str, opts) {\n    return new SVGPath(createPathOptions(str, opts));\n}\nexport function extendFromString(str, defaultOpts) {\n    var innerOpts = createPathOptions(str, defaultOpts);\n    var Sub = (function (_super) {\n        __extends(Sub, _super);\n        function Sub(opts) {\n            var _this = _super.call(this, opts) || this;\n            _this.applyTransform = innerOpts.applyTransform;\n            _this.buildPath = innerOpts.buildPath;\n            return _this;\n        }\n        return Sub;\n    }(SVGPath));\n    return Sub;\n}\nexport function mergePath(pathEls, opts) {\n    var pathList = [];\n    var len = pathEls.length;\n    for (var i = 0; i < len; i++) {\n        var pathEl = pathEls[i];\n        pathList.push(pathEl.getUpdatedPathProxy(true));\n    }\n    var pathBundle = new Path(opts);\n    pathBundle.createPathProxy();\n    pathBundle.buildPath = function (path) {\n        if (isPathProxy(path)) {\n            path.appendPath(pathList);\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx, 1);\n            }\n        }\n    };\n    return pathBundle;\n}\nexport function clonePath(sourcePath, opts) {\n    opts = opts || {};\n    var path = new Path();\n    if (sourcePath.shape) {\n        path.setShape(sourcePath.shape);\n    }\n    path.setStyle(sourcePath.style);\n    if (opts.bakeTransform) {\n        transformPath(path.path, sourcePath.getComputedTransform());\n    }\n    else {\n        if (opts.toLocal) {\n            path.setLocalTransform(sourcePath.getComputedTransform());\n        }\n        else {\n            path.copyTransform(sourcePath);\n        }\n    }\n    path.buildPath = sourcePath.buildPath;\n    path.applyTransform = path.applyTransform;\n    path.z = sourcePath.z;\n    path.z2 = sourcePath.z2;\n    path.zlevel = sourcePath.zlevel;\n    return path;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}