{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport labelLayout from './labelLayout.js';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getSectorCornerRadius } from '../helper/sectorHelper.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nimport { getBasicPieLayout } from './pieLayout.js';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece = /** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n    _this.z2 = 2;\n    var text = new graphic.Text();\n    _this.setTextContent(text);\n    _this.updateData(data, idx, startAngle, true);\n    return _this;\n  }\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n        if (startAngle != null) {\n          sector.setShape({\n            startAngle: startAngle,\n            endAngle: startAngle\n          });\n          graphic.initProps(sector, {\n            shape: {\n              startAngle: layout.startAngle,\n              endAngle: layout.endAngle\n            }\n          }, seriesModel, idx);\n        } else {\n          sector.shape.endAngle = layout.startAngle;\n          graphic.updateProps(sector, {\n            shape: {\n              endAngle: layout.endAngle\n            }\n          }, seriesModel, idx);\n        }\n      }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n    this._updateLabel(seriesModel, data, idx);\n    sector.ensureState('emphasis').shape = extend({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    toggleHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\nvar PieView = /** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n  PieView.prototype.dispose = function () {};\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\nexport default PieView;","map":{"version":3,"names":["__extends","extend","retrieve3","graphic","setStatesStylesFromModel","toggleHoverEmphasis","ChartView","labelLayout","setLabelLineStyle","getLabelLineStatesModels","setLabelStyle","getLabelStatesModels","getSectorCornerRadius","saveOldStyle","getBasicPieLayout","PiePiece","_super","data","idx","startAngle","_this","call","z2","text","Text","setTextContent","updateData","prototype","firstCreate","sector","seriesModel","hostModel","itemModel","getItemModel","emphasisModel","getModel","layout","getItemLayout","sectorShape","isNaN","setShape","animationType","getShallow","ecModel","ssr","initProps","scaleX","scaleY","dataIndex","isFrom","originX","cx","originY","cy","shape","r","r0","endAngle","updateProps","useStyle","getItemVisual","midAngle","offset","get","dx","Math","cos","dy","sin","cursorStyle","attr","_updateLabel","ensureState","x","y","labelLine","getTextGuideLine","labelText","getTextContent","labelLineModel","style","visualColor","fill","visualOpacity","opacity","labelFetcher","labelDataIndex","inheritColor","defaultOpacity","defaultText","getFormattedLabel","getName","setTextConfig","position","rotation","labelPosition","removeTextGuideLine","polyline","Polyline","setTextGuideLine","stroke","Sector","PieView","apply","arguments","ignoreLabelLineUpdate","render","api","payload","getData","oldData","_data","group","count","s","_emptyCircleSector","remove","getItemStyle","add","diff","piePiece","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","off","removeElementWithFadeOut","execute","dispose","containPoint","point","itemLayout","radius","sqrt","type"],"sources":["F:/VUEProject/map-project/graduation_project/project/node_modules/echarts/lib/chart/pie/PieView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport labelLayout from './labelLayout.js';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getSectorCornerRadius } from '../helper/sectorHelper.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nimport { getBasicPieLayout } from './pieLayout.js';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n          if (startAngle != null) {\n            sector.setShape({\n              startAngle: startAngle,\n              endAngle: startAngle\n            });\n            graphic.initProps(sector, {\n              shape: {\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          } else {\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n              shape: {\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          }\n        }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = extend({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    toggleHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\n\nexport default PieView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}