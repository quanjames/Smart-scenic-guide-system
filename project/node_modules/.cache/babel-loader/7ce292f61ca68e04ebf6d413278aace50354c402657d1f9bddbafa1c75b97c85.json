{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic.js';\nimport { round } from '../../util/number.js';\nimport { isFunction } from 'zrender/lib/core/util.js';\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel, done, during) {\n  var rect = cartesian.getArea();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get(['lineStyle', 'width']) || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n  if (hasAnimation) {\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = baseAxis.isHorizontal();\n    var isAxisInversed = baseAxis.inverse;\n    if (isHorizontal) {\n      if (isAxisInversed) {\n        clipPath.shape.x += width;\n      }\n      clipPath.shape.width = 0;\n    } else {\n      if (!isAxisInversed) {\n        clipPath.shape.y += height;\n      }\n      clipPath.shape.height = 0;\n    }\n    var duringCb = isFunction(during) ? function (percent) {\n      during(percent, clipPath);\n    } : null;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n      }\n    }, seriesModel, null, done, duringCb);\n  }\n  return clipPath;\n}\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var r0 = round(sectorArea.r0, 1);\n  var r = round(sectorArea.r, 1);\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: r0,\n      r: r,\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n  if (hasAnimation) {\n    var isRadial = polar.getBaseAxis().dim === 'angle';\n    if (isRadial) {\n      clipPath.shape.endAngle = sectorArea.startAngle;\n    } else {\n      clipPath.shape.r = r0;\n    }\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle,\n        r: r\n      }\n    }, seriesModel);\n  }\n  return clipPath;\n}\nfunction createClipPath(coordSys, hasAnimation, seriesModel, done, during) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel, done, during);\n  }\n  return null;\n}\nexport { createGridClipPath, createPolarClipPath, createClipPath };","map":{"version":3,"names":["graphic","round","isFunction","createGridClipPath","cartesian","hasAnimation","seriesModel","done","during","rect","getArea","x","y","width","height","lineWidth","get","Math","floor","clipPath","Rect","shape","baseAxis","getBaseAxis","isHorizontal","isAxisInversed","inverse","duringCb","percent","initProps","createPolarClipPath","polar","sectorArea","r0","r","Sector","cx","cy","startAngle","endAngle","clockwise","isRadial","dim","createClipPath","coordSys","type"],"sources":["F:/VUEProject/map-project/graduation_project/project/node_modules/echarts/lib/chart/helper/createClipPathFromCoordSys.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic.js';\nimport { round } from '../../util/number.js';\nimport { isFunction } from 'zrender/lib/core/util.js';\n\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel, done, during) {\n  var rect = cartesian.getArea();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get(['lineStyle', 'width']) || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = baseAxis.isHorizontal();\n    var isAxisInversed = baseAxis.inverse;\n\n    if (isHorizontal) {\n      if (isAxisInversed) {\n        clipPath.shape.x += width;\n      }\n\n      clipPath.shape.width = 0;\n    } else {\n      if (!isAxisInversed) {\n        clipPath.shape.y += height;\n      }\n\n      clipPath.shape.height = 0;\n    }\n\n    var duringCb = isFunction(during) ? function (percent) {\n      during(percent, clipPath);\n    } : null;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n      }\n    }, seriesModel, null, done, duringCb);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var r0 = round(sectorArea.r0, 1);\n  var r = round(sectorArea.r, 1);\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: r0,\n      r: r,\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n\n  if (hasAnimation) {\n    var isRadial = polar.getBaseAxis().dim === 'angle';\n\n    if (isRadial) {\n      clipPath.shape.endAngle = sectorArea.startAngle;\n    } else {\n      clipPath.shape.r = r0;\n    }\n\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle,\n        r: r\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipPath(coordSys, hasAnimation, seriesModel, done, during) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel, done, during);\n  }\n\n  return null;\n}\n\nexport { createGridClipPath, createPolarClipPath, createClipPath };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}