{"ast":null,"code":"import { isArray } from '../../core/util.js';\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar mathACos = Math.acos;\nvar mathATan2 = Math.atan2;\nvar mathAbs = Math.abs;\nvar mathSqrt = Math.sqrt;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar e = 1e-4;\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var dx10 = x1 - x0;\n  var dy10 = y1 - y0;\n  var dx32 = x3 - x2;\n  var dy32 = y3 - y2;\n  var t = dy32 * dx10 - dx32 * dy10;\n  if (t * t < e) {\n    return;\n  }\n  t = (dx32 * (y0 - y2) - dy32 * (x0 - x2)) / t;\n  return [x0 + t * dx10, y0 + t * dy10];\n}\nfunction computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\n  var x01 = x0 - x1;\n  var y01 = y0 - y1;\n  var lo = (clockwise ? cr : -cr) / mathSqrt(x01 * x01 + y01 * y01);\n  var ox = lo * y01;\n  var oy = -lo * x01;\n  var x11 = x0 + ox;\n  var y11 = y0 + oy;\n  var x10 = x1 + ox;\n  var y10 = y1 + oy;\n  var x00 = (x11 + x10) / 2;\n  var y00 = (y11 + y10) / 2;\n  var dx = x10 - x11;\n  var dy = y10 - y11;\n  var d2 = dx * dx + dy * dy;\n  var r = radius - cr;\n  var s = x11 * y10 - x10 * y11;\n  var d = (dy < 0 ? -1 : 1) * mathSqrt(mathMax(0, r * r * d2 - s * s));\n  var cx0 = (s * dy - dx * d) / d2;\n  var cy0 = (-s * dx - dy * d) / d2;\n  var cx1 = (s * dy + dx * d) / d2;\n  var cy1 = (-s * dx + dy * d) / d2;\n  var dx0 = cx0 - x00;\n  var dy0 = cy0 - y00;\n  var dx1 = cx1 - x00;\n  var dy1 = cy1 - y00;\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n    cx0 = cx1;\n    cy0 = cy1;\n  }\n  return {\n    cx: cx0,\n    cy: cy0,\n    x0: -ox,\n    y0: -oy,\n    x1: cx0 * (radius / r - 1),\n    y1: cy0 * (radius / r - 1)\n  };\n}\nfunction normalizeCornerRadius(cr) {\n  var arr;\n  if (isArray(cr)) {\n    var len = cr.length;\n    if (!len) {\n      return cr;\n    }\n    if (len === 1) {\n      arr = [cr[0], cr[0], 0, 0];\n    } else if (len === 2) {\n      arr = [cr[0], cr[0], cr[1], cr[1]];\n    } else if (len === 3) {\n      arr = cr.concat(cr[2]);\n    } else {\n      arr = cr;\n    }\n  } else {\n    arr = [cr, cr, cr, cr];\n  }\n  return arr;\n}\nexport function buildPath(ctx, shape) {\n  var _a;\n  var radius = mathMax(shape.r, 0);\n  var innerRadius = mathMax(shape.r0 || 0, 0);\n  var hasRadius = radius > 0;\n  var hasInnerRadius = innerRadius > 0;\n  if (!hasRadius && !hasInnerRadius) {\n    return;\n  }\n  if (!hasRadius) {\n    radius = innerRadius;\n    innerRadius = 0;\n  }\n  if (innerRadius > radius) {\n    var tmp = radius;\n    radius = innerRadius;\n    innerRadius = tmp;\n  }\n  var startAngle = shape.startAngle,\n    endAngle = shape.endAngle;\n  if (isNaN(startAngle) || isNaN(endAngle)) {\n    return;\n  }\n  var cx = shape.cx,\n    cy = shape.cy;\n  var clockwise = !!shape.clockwise;\n  var arc = mathAbs(endAngle - startAngle);\n  var mod = arc > PI2 && arc % PI2;\n  mod > e && (arc = mod);\n  if (!(radius > e)) {\n    ctx.moveTo(cx, cy);\n  } else if (arc > PI2 - e) {\n    ctx.moveTo(cx + radius * mathCos(startAngle), cy + radius * mathSin(startAngle));\n    ctx.arc(cx, cy, radius, startAngle, endAngle, !clockwise);\n    if (innerRadius > e) {\n      ctx.moveTo(cx + innerRadius * mathCos(endAngle), cy + innerRadius * mathSin(endAngle));\n      ctx.arc(cx, cy, innerRadius, endAngle, startAngle, clockwise);\n    }\n  } else {\n    var icrStart = void 0;\n    var icrEnd = void 0;\n    var ocrStart = void 0;\n    var ocrEnd = void 0;\n    var ocrs = void 0;\n    var ocre = void 0;\n    var icrs = void 0;\n    var icre = void 0;\n    var ocrMax = void 0;\n    var icrMax = void 0;\n    var limitedOcrMax = void 0;\n    var limitedIcrMax = void 0;\n    var xre = void 0;\n    var yre = void 0;\n    var xirs = void 0;\n    var yirs = void 0;\n    var xrs = radius * mathCos(startAngle);\n    var yrs = radius * mathSin(startAngle);\n    var xire = innerRadius * mathCos(endAngle);\n    var yire = innerRadius * mathSin(endAngle);\n    var hasArc = arc > e;\n    if (hasArc) {\n      var cornerRadius = shape.cornerRadius;\n      if (cornerRadius) {\n        _a = normalizeCornerRadius(cornerRadius), icrStart = _a[0], icrEnd = _a[1], ocrStart = _a[2], ocrEnd = _a[3];\n      }\n      var halfRd = mathAbs(radius - innerRadius) / 2;\n      ocrs = mathMin(halfRd, ocrStart);\n      ocre = mathMin(halfRd, ocrEnd);\n      icrs = mathMin(halfRd, icrStart);\n      icre = mathMin(halfRd, icrEnd);\n      limitedOcrMax = ocrMax = mathMax(ocrs, ocre);\n      limitedIcrMax = icrMax = mathMax(icrs, icre);\n      if (ocrMax > e || icrMax > e) {\n        xre = radius * mathCos(endAngle);\n        yre = radius * mathSin(endAngle);\n        xirs = innerRadius * mathCos(startAngle);\n        yirs = innerRadius * mathSin(startAngle);\n        if (arc < PI) {\n          var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\n          if (it_1) {\n            var x0 = xrs - it_1[0];\n            var y0 = yrs - it_1[1];\n            var x1 = xre - it_1[0];\n            var y1 = yre - it_1[1];\n            var a = 1 / mathSin(mathACos((x0 * x1 + y0 * y1) / (mathSqrt(x0 * x0 + y0 * y0) * mathSqrt(x1 * x1 + y1 * y1))) / 2);\n            var b = mathSqrt(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\n            limitedOcrMax = mathMin(ocrMax, (radius - b) / (a + 1));\n            limitedIcrMax = mathMin(icrMax, (innerRadius - b) / (a - 1));\n          }\n        }\n      }\n    }\n    if (!hasArc) {\n      ctx.moveTo(cx + xrs, cy + yrs);\n    } else if (limitedOcrMax > e) {\n      var crStart = mathMin(ocrStart, limitedOcrMax);\n      var crEnd = mathMin(ocrEnd, limitedOcrMax);\n      var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, crStart, clockwise);\n      var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, crEnd, clockwise);\n      ctx.moveTo(cx + ct0.cx + ct0.x0, cy + ct0.cy + ct0.y0);\n      if (limitedOcrMax < ocrMax && crStart === crEnd) {\n        ctx.arc(cx + ct0.cx, cy + ct0.cy, limitedOcrMax, mathATan2(ct0.y0, ct0.x0), mathATan2(ct1.y0, ct1.x0), !clockwise);\n      } else {\n        crStart > 0 && ctx.arc(cx + ct0.cx, cy + ct0.cy, crStart, mathATan2(ct0.y0, ct0.x0), mathATan2(ct0.y1, ct0.x1), !clockwise);\n        ctx.arc(cx, cy, radius, mathATan2(ct0.cy + ct0.y1, ct0.cx + ct0.x1), mathATan2(ct1.cy + ct1.y1, ct1.cx + ct1.x1), !clockwise);\n        crEnd > 0 && ctx.arc(cx + ct1.cx, cy + ct1.cy, crEnd, mathATan2(ct1.y1, ct1.x1), mathATan2(ct1.y0, ct1.x0), !clockwise);\n      }\n    } else {\n      ctx.moveTo(cx + xrs, cy + yrs);\n      ctx.arc(cx, cy, radius, startAngle, endAngle, !clockwise);\n    }\n    if (!(innerRadius > e) || !hasArc) {\n      ctx.lineTo(cx + xire, cy + yire);\n    } else if (limitedIcrMax > e) {\n      var crStart = mathMin(icrStart, limitedIcrMax);\n      var crEnd = mathMin(icrEnd, limitedIcrMax);\n      var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -crEnd, clockwise);\n      var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -crStart, clockwise);\n      ctx.lineTo(cx + ct0.cx + ct0.x0, cy + ct0.cy + ct0.y0);\n      if (limitedIcrMax < icrMax && crStart === crEnd) {\n        ctx.arc(cx + ct0.cx, cy + ct0.cy, limitedIcrMax, mathATan2(ct0.y0, ct0.x0), mathATan2(ct1.y0, ct1.x0), !clockwise);\n      } else {\n        crEnd > 0 && ctx.arc(cx + ct0.cx, cy + ct0.cy, crEnd, mathATan2(ct0.y0, ct0.x0), mathATan2(ct0.y1, ct0.x1), !clockwise);\n        ctx.arc(cx, cy, innerRadius, mathATan2(ct0.cy + ct0.y1, ct0.cx + ct0.x1), mathATan2(ct1.cy + ct1.y1, ct1.cx + ct1.x1), clockwise);\n        crStart > 0 && ctx.arc(cx + ct1.cx, cy + ct1.cy, crStart, mathATan2(ct1.y1, ct1.x1), mathATan2(ct1.y0, ct1.x0), !clockwise);\n      }\n    } else {\n      ctx.lineTo(cx + xire, cy + yire);\n      ctx.arc(cx, cy, innerRadius, endAngle, startAngle, clockwise);\n    }\n  }\n  ctx.closePath();\n}","map":{"version":3,"names":["isArray","PI","Math","PI2","mathSin","sin","mathCos","cos","mathACos","acos","mathATan2","atan2","mathAbs","abs","mathSqrt","sqrt","mathMax","max","mathMin","min","e","intersect","x0","y0","x1","y1","x2","y2","x3","y3","dx10","dy10","dx32","dy32","t","computeCornerTangents","radius","cr","clockwise","x01","y01","lo","ox","oy","x11","y11","x10","y10","x00","y00","dx","dy","d2","r","s","d","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","normalizeCornerRadius","arr","len","length","concat","buildPath","ctx","shape","_a","innerRadius","r0","hasRadius","hasInnerRadius","tmp","startAngle","endAngle","isNaN","arc","mod","moveTo","icrStart","icrEnd","ocrStart","ocrEnd","ocrs","ocre","icrs","icre","ocrMax","icrMax","limitedOcrMax","limitedIcrMax","xre","yre","xirs","yirs","xrs","yrs","xire","yire","hasArc","cornerRadius","halfRd","it_1","a","b","crStart","crEnd","ct0","ct1","lineTo","closePath"],"sources":["F:/VUEProject/map-project/graduation_project/project/node_modules/zrender/lib/graphic/helper/roundSector.js"],"sourcesContent":["import { isArray } from '../../core/util.js';\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar mathACos = Math.acos;\nvar mathATan2 = Math.atan2;\nvar mathAbs = Math.abs;\nvar mathSqrt = Math.sqrt;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar e = 1e-4;\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var dx10 = x1 - x0;\n    var dy10 = y1 - y0;\n    var dx32 = x3 - x2;\n    var dy32 = y3 - y2;\n    var t = dy32 * dx10 - dx32 * dy10;\n    if (t * t < e) {\n        return;\n    }\n    t = (dx32 * (y0 - y2) - dy32 * (x0 - x2)) / t;\n    return [x0 + t * dx10, y0 + t * dy10];\n}\nfunction computeCornerTangents(x0, y0, x1, y1, radius, cr, clockwise) {\n    var x01 = x0 - x1;\n    var y01 = y0 - y1;\n    var lo = (clockwise ? cr : -cr) / mathSqrt(x01 * x01 + y01 * y01);\n    var ox = lo * y01;\n    var oy = -lo * x01;\n    var x11 = x0 + ox;\n    var y11 = y0 + oy;\n    var x10 = x1 + ox;\n    var y10 = y1 + oy;\n    var x00 = (x11 + x10) / 2;\n    var y00 = (y11 + y10) / 2;\n    var dx = x10 - x11;\n    var dy = y10 - y11;\n    var d2 = dx * dx + dy * dy;\n    var r = radius - cr;\n    var s = x11 * y10 - x10 * y11;\n    var d = (dy < 0 ? -1 : 1) * mathSqrt(mathMax(0, r * r * d2 - s * s));\n    var cx0 = (s * dy - dx * d) / d2;\n    var cy0 = (-s * dx - dy * d) / d2;\n    var cx1 = (s * dy + dx * d) / d2;\n    var cy1 = (-s * dx + dy * d) / d2;\n    var dx0 = cx0 - x00;\n    var dy0 = cy0 - y00;\n    var dx1 = cx1 - x00;\n    var dy1 = cy1 - y00;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) {\n        cx0 = cx1;\n        cy0 = cy1;\n    }\n    return {\n        cx: cx0,\n        cy: cy0,\n        x0: -ox,\n        y0: -oy,\n        x1: cx0 * (radius / r - 1),\n        y1: cy0 * (radius / r - 1)\n    };\n}\nfunction normalizeCornerRadius(cr) {\n    var arr;\n    if (isArray(cr)) {\n        var len = cr.length;\n        if (!len) {\n            return cr;\n        }\n        if (len === 1) {\n            arr = [cr[0], cr[0], 0, 0];\n        }\n        else if (len === 2) {\n            arr = [cr[0], cr[0], cr[1], cr[1]];\n        }\n        else if (len === 3) {\n            arr = cr.concat(cr[2]);\n        }\n        else {\n            arr = cr;\n        }\n    }\n    else {\n        arr = [cr, cr, cr, cr];\n    }\n    return arr;\n}\nexport function buildPath(ctx, shape) {\n    var _a;\n    var radius = mathMax(shape.r, 0);\n    var innerRadius = mathMax(shape.r0 || 0, 0);\n    var hasRadius = radius > 0;\n    var hasInnerRadius = innerRadius > 0;\n    if (!hasRadius && !hasInnerRadius) {\n        return;\n    }\n    if (!hasRadius) {\n        radius = innerRadius;\n        innerRadius = 0;\n    }\n    if (innerRadius > radius) {\n        var tmp = radius;\n        radius = innerRadius;\n        innerRadius = tmp;\n    }\n    var startAngle = shape.startAngle, endAngle = shape.endAngle;\n    if (isNaN(startAngle) || isNaN(endAngle)) {\n        return;\n    }\n    var cx = shape.cx, cy = shape.cy;\n    var clockwise = !!shape.clockwise;\n    var arc = mathAbs(endAngle - startAngle);\n    var mod = arc > PI2 && arc % PI2;\n    mod > e && (arc = mod);\n    if (!(radius > e)) {\n        ctx.moveTo(cx, cy);\n    }\n    else if (arc > PI2 - e) {\n        ctx.moveTo(cx + radius * mathCos(startAngle), cy + radius * mathSin(startAngle));\n        ctx.arc(cx, cy, radius, startAngle, endAngle, !clockwise);\n        if (innerRadius > e) {\n            ctx.moveTo(cx + innerRadius * mathCos(endAngle), cy + innerRadius * mathSin(endAngle));\n            ctx.arc(cx, cy, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    else {\n        var icrStart = void 0;\n        var icrEnd = void 0;\n        var ocrStart = void 0;\n        var ocrEnd = void 0;\n        var ocrs = void 0;\n        var ocre = void 0;\n        var icrs = void 0;\n        var icre = void 0;\n        var ocrMax = void 0;\n        var icrMax = void 0;\n        var limitedOcrMax = void 0;\n        var limitedIcrMax = void 0;\n        var xre = void 0;\n        var yre = void 0;\n        var xirs = void 0;\n        var yirs = void 0;\n        var xrs = radius * mathCos(startAngle);\n        var yrs = radius * mathSin(startAngle);\n        var xire = innerRadius * mathCos(endAngle);\n        var yire = innerRadius * mathSin(endAngle);\n        var hasArc = arc > e;\n        if (hasArc) {\n            var cornerRadius = shape.cornerRadius;\n            if (cornerRadius) {\n                _a = normalizeCornerRadius(cornerRadius), icrStart = _a[0], icrEnd = _a[1], ocrStart = _a[2], ocrEnd = _a[3];\n            }\n            var halfRd = mathAbs(radius - innerRadius) / 2;\n            ocrs = mathMin(halfRd, ocrStart);\n            ocre = mathMin(halfRd, ocrEnd);\n            icrs = mathMin(halfRd, icrStart);\n            icre = mathMin(halfRd, icrEnd);\n            limitedOcrMax = ocrMax = mathMax(ocrs, ocre);\n            limitedIcrMax = icrMax = mathMax(icrs, icre);\n            if (ocrMax > e || icrMax > e) {\n                xre = radius * mathCos(endAngle);\n                yre = radius * mathSin(endAngle);\n                xirs = innerRadius * mathCos(startAngle);\n                yirs = innerRadius * mathSin(startAngle);\n                if (arc < PI) {\n                    var it_1 = intersect(xrs, yrs, xirs, yirs, xre, yre, xire, yire);\n                    if (it_1) {\n                        var x0 = xrs - it_1[0];\n                        var y0 = yrs - it_1[1];\n                        var x1 = xre - it_1[0];\n                        var y1 = yre - it_1[1];\n                        var a = 1 / mathSin(mathACos((x0 * x1 + y0 * y1) / (mathSqrt(x0 * x0 + y0 * y0) * mathSqrt(x1 * x1 + y1 * y1))) / 2);\n                        var b = mathSqrt(it_1[0] * it_1[0] + it_1[1] * it_1[1]);\n                        limitedOcrMax = mathMin(ocrMax, (radius - b) / (a + 1));\n                        limitedIcrMax = mathMin(icrMax, (innerRadius - b) / (a - 1));\n                    }\n                }\n            }\n        }\n        if (!hasArc) {\n            ctx.moveTo(cx + xrs, cy + yrs);\n        }\n        else if (limitedOcrMax > e) {\n            var crStart = mathMin(ocrStart, limitedOcrMax);\n            var crEnd = mathMin(ocrEnd, limitedOcrMax);\n            var ct0 = computeCornerTangents(xirs, yirs, xrs, yrs, radius, crStart, clockwise);\n            var ct1 = computeCornerTangents(xre, yre, xire, yire, radius, crEnd, clockwise);\n            ctx.moveTo(cx + ct0.cx + ct0.x0, cy + ct0.cy + ct0.y0);\n            if (limitedOcrMax < ocrMax && crStart === crEnd) {\n                ctx.arc(cx + ct0.cx, cy + ct0.cy, limitedOcrMax, mathATan2(ct0.y0, ct0.x0), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n            else {\n                crStart > 0 && ctx.arc(cx + ct0.cx, cy + ct0.cy, crStart, mathATan2(ct0.y0, ct0.x0), mathATan2(ct0.y1, ct0.x1), !clockwise);\n                ctx.arc(cx, cy, radius, mathATan2(ct0.cy + ct0.y1, ct0.cx + ct0.x1), mathATan2(ct1.cy + ct1.y1, ct1.cx + ct1.x1), !clockwise);\n                crEnd > 0 && ctx.arc(cx + ct1.cx, cy + ct1.cy, crEnd, mathATan2(ct1.y1, ct1.x1), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n        }\n        else {\n            ctx.moveTo(cx + xrs, cy + yrs);\n            ctx.arc(cx, cy, radius, startAngle, endAngle, !clockwise);\n        }\n        if (!(innerRadius > e) || !hasArc) {\n            ctx.lineTo(cx + xire, cy + yire);\n        }\n        else if (limitedIcrMax > e) {\n            var crStart = mathMin(icrStart, limitedIcrMax);\n            var crEnd = mathMin(icrEnd, limitedIcrMax);\n            var ct0 = computeCornerTangents(xire, yire, xre, yre, innerRadius, -crEnd, clockwise);\n            var ct1 = computeCornerTangents(xrs, yrs, xirs, yirs, innerRadius, -crStart, clockwise);\n            ctx.lineTo(cx + ct0.cx + ct0.x0, cy + ct0.cy + ct0.y0);\n            if (limitedIcrMax < icrMax && crStart === crEnd) {\n                ctx.arc(cx + ct0.cx, cy + ct0.cy, limitedIcrMax, mathATan2(ct0.y0, ct0.x0), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n            else {\n                crEnd > 0 && ctx.arc(cx + ct0.cx, cy + ct0.cy, crEnd, mathATan2(ct0.y0, ct0.x0), mathATan2(ct0.y1, ct0.x1), !clockwise);\n                ctx.arc(cx, cy, innerRadius, mathATan2(ct0.cy + ct0.y1, ct0.cx + ct0.x1), mathATan2(ct1.cy + ct1.y1, ct1.cx + ct1.x1), clockwise);\n                crStart > 0 && ctx.arc(cx + ct1.cx, cy + ct1.cy, crStart, mathATan2(ct1.y1, ct1.x1), mathATan2(ct1.y0, ct1.x0), !clockwise);\n            }\n        }\n        else {\n            ctx.lineTo(cx + xire, cy + yire);\n            ctx.arc(cx, cy, innerRadius, endAngle, startAngle, clockwise);\n        }\n    }\n    ctx.closePath();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}