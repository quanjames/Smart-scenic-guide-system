{"ast":null,"code":"import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of a synced prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param options the options for the synced prop\n * @return PropertyDecorator | void\n */\nexport function PropSync(propName, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return function (target, key) {\n    applyMetadata(options, target, key);\n    createDecorator(function (componentOptions, k) {\n      ;\n      (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n      (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n        get: function () {\n          return this[propName];\n        },\n        set: function (value) {\n          this.$emit(\"update:\" + propName, value);\n        }\n      };\n    })(target, key);\n  };\n}","map":{"version":3,"names":["createDecorator","applyMetadata","PropSync","propName","options","target","key","componentOptions","k","props","computed","get","set","value","$emit"],"sources":["G:/VueProject/project/node_modules/vue-property-decorator/lib/decorators/PropSync.js"],"sourcesContent":["import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of a synced prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param options the options for the synced prop\n * @return PropertyDecorator | void\n */\nexport function PropSync(propName, options) {\n    if (options === void 0) { options = {}; }\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n            (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n                get: function () {\n                    return this[propName];\n                },\n                set: function (value) {\n                    this.$emit(\"update:\" + propName, value);\n                },\n            };\n        })(target, key);\n    };\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,qBAAqB;AACrD,SAASC,aAAa,QAAQ,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACxC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EACxC,OAAO,UAAUC,MAAM,EAAEC,GAAG,EAAE;IAC1BL,aAAa,CAACG,OAAO,EAAEC,MAAM,EAAEC,GAAG,CAAC;IACnCN,eAAe,CAAC,UAAUO,gBAAgB,EAAEC,CAAC,EAAE;MAC3C;MACA,CAACD,gBAAgB,CAACE,KAAK,KAAKF,gBAAgB,CAACE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAEN,QAAQ,CAAC,GAAGC,OAAO;MAC7E,CAACG,gBAAgB,CAACG,QAAQ,KAAKH,gBAAgB,CAACG,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAEF,CAAC,CAAC,GAAG;QACjEG,GAAG,EAAE,SAAAA,CAAA,EAAY;UACb,OAAO,IAAI,CAACR,QAAQ,CAAC;QACzB,CAAC;QACDS,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;UAClB,IAAI,CAACC,KAAK,CAAC,SAAS,GAAGX,QAAQ,EAAEU,KAAK,CAAC;QAC3C;MACJ,CAAC;IACL,CAAC,CAAC,CAACR,MAAM,EAAEC,GAAG,CAAC;EACnB,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}