{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport createRenderPlanner from '../helper/createRenderPlanner.js';\nimport { extend } from 'zrender/lib/core/util.js';\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar dojiBorderColorQuery = ['itemStyle', 'borderColorDoji'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar candlestickVisual = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n    function getBorderColor(sign, model) {\n      return model.get(sign === 0 ? dojiBorderColorQuery : sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    } // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n    var isLargeRender = seriesModel.pipelineContext.large;\n    return !isLargeRender && {\n      progress: function (params, data) {\n        var dataIndex;\n        while ((dataIndex = params.next()) != null) {\n          var itemModel = data.getItemModel(dataIndex);\n          var sign = data.getItemLayout(dataIndex).sign;\n          var style = itemModel.getItemStyle();\n          style.fill = getColor(sign, itemModel);\n          style.stroke = getBorderColor(sign, itemModel) || style.fill;\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\n          extend(existsStyle, style);\n        }\n      }\n    };\n  }\n};\nexport default candlestickVisual;","map":{"version":3,"names":["createRenderPlanner","extend","positiveBorderColorQuery","negativeBorderColorQuery","dojiBorderColorQuery","positiveColorQuery","negativeColorQuery","candlestickVisual","seriesType","plan","performRawSeries","reset","seriesModel","ecModel","getColor","sign","model","get","getBorderColor","isSeriesFiltered","isLargeRender","pipelineContext","large","progress","params","data","dataIndex","next","itemModel","getItemModel","getItemLayout","style","getItemStyle","fill","stroke","existsStyle","ensureUniqueItemVisual"],"sources":["F:/VUEProject/map-project/graduation_project/project/node_modules/echarts/lib/chart/candlestick/candlestickVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport createRenderPlanner from '../helper/createRenderPlanner.js';\nimport { extend } from 'zrender/lib/core/util.js';\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar dojiBorderColorQuery = ['itemStyle', 'borderColorDoji'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar candlestickVisual = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign === 0 ? dojiBorderColorQuery : sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    } // Only visible series has each data be visual encoded\n\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    var isLargeRender = seriesModel.pipelineContext.large;\n    return !isLargeRender && {\n      progress: function (params, data) {\n        var dataIndex;\n\n        while ((dataIndex = params.next()) != null) {\n          var itemModel = data.getItemModel(dataIndex);\n          var sign = data.getItemLayout(dataIndex).sign;\n          var style = itemModel.getItemStyle();\n          style.fill = getColor(sign, itemModel);\n          style.stroke = getBorderColor(sign, itemModel) || style.fill;\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\n          extend(existsStyle, style);\n        }\n      }\n    };\n  }\n};\nexport default candlestickVisual;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,mBAAmB,MAAM,kCAAkC;AAClE,SAASC,MAAM,QAAQ,0BAA0B;AACjD,IAAIC,wBAAwB,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC;AAC3D,IAAIC,wBAAwB,GAAG,CAAC,WAAW,EAAE,cAAc,CAAC;AAC5D,IAAIC,oBAAoB,GAAG,CAAC,WAAW,EAAE,iBAAiB,CAAC;AAC3D,IAAIC,kBAAkB,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC;AAC/C,IAAIC,kBAAkB,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC;AAChD,IAAIC,iBAAiB,GAAG;EACtBC,UAAU,EAAE,aAAa;EACzBC,IAAI,EAAET,mBAAmB,EAAE;EAC3B;EACAU,gBAAgB,EAAE,IAAI;EACtBC,KAAK,EAAE,SAAAA,CAAUC,WAAW,EAAEC,OAAO,EAAE;IACrC,SAASC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;MAC7B,OAAOA,KAAK,CAACC,GAAG,CAACF,IAAI,GAAG,CAAC,GAAGV,kBAAkB,GAAGC,kBAAkB,CAAC;IACtE;IAEA,SAASY,cAAcA,CAACH,IAAI,EAAEC,KAAK,EAAE;MACnC,OAAOA,KAAK,CAACC,GAAG,CAACF,IAAI,KAAK,CAAC,GAAGX,oBAAoB,GAAGW,IAAI,GAAG,CAAC,GAAGb,wBAAwB,GAAGC,wBAAwB,CAAC;IACtH,CAAC,CAAC;;IAGF,IAAIU,OAAO,CAACM,gBAAgB,CAACP,WAAW,CAAC,EAAE;MACzC;IACF;IAEA,IAAIQ,aAAa,GAAGR,WAAW,CAACS,eAAe,CAACC,KAAK;IACrD,OAAO,CAACF,aAAa,IAAI;MACvBG,QAAQ,EAAE,SAAAA,CAAUC,MAAM,EAAEC,IAAI,EAAE;QAChC,IAAIC,SAAS;QAEb,OAAO,CAACA,SAAS,GAAGF,MAAM,CAACG,IAAI,EAAE,KAAK,IAAI,EAAE;UAC1C,IAAIC,SAAS,GAAGH,IAAI,CAACI,YAAY,CAACH,SAAS,CAAC;UAC5C,IAAIX,IAAI,GAAGU,IAAI,CAACK,aAAa,CAACJ,SAAS,CAAC,CAACX,IAAI;UAC7C,IAAIgB,KAAK,GAAGH,SAAS,CAACI,YAAY,EAAE;UACpCD,KAAK,CAACE,IAAI,GAAGnB,QAAQ,CAACC,IAAI,EAAEa,SAAS,CAAC;UACtCG,KAAK,CAACG,MAAM,GAAGhB,cAAc,CAACH,IAAI,EAAEa,SAAS,CAAC,IAAIG,KAAK,CAACE,IAAI;UAC5D,IAAIE,WAAW,GAAGV,IAAI,CAACW,sBAAsB,CAACV,SAAS,EAAE,OAAO,CAAC;UACjEzB,MAAM,CAACkC,WAAW,EAAEJ,KAAK,CAAC;QAC5B;MACF;IACF,CAAC;EACH;AACF,CAAC;AACD,eAAexB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}