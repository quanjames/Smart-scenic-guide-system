{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { indexOf, createHashMap, assert } from 'zrender/lib/core/util.js';\nexport var DATA_ZOOM_AXIS_DIMENSIONS = ['x', 'y', 'radius', 'angle', 'single']; // Supported coords.\n// FIXME: polar has been broken (but rarely used).\n\nvar SERIES_COORDS = ['cartesian2d', 'polar', 'singleAxis'];\nexport function isCoordSupported(seriesModel) {\n  var coordType = seriesModel.get('coordinateSystem');\n  return indexOf(SERIES_COORDS, coordType) >= 0;\n}\nexport function getAxisMainType(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n  return axisDim + 'Axis';\n}\nexport function getAxisIndexPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n  return axisDim + 'AxisIndex';\n}\nexport function getAxisIdPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n  return axisDim + 'AxisId';\n}\n/**\n * If two dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * This function finds all linked dataZoomModels start from the given payload.\n */\n\nexport function findEffectedDataZooms(ecModel, payload) {\n  // Key: `DataZoomAxisDimension`\n  var axisRecords = createHashMap();\n  var effectedModels = []; // Key: uid of dataZoomModel\n\n  var effectedModelMap = createHashMap(); // Find the dataZooms specified by payload.\n\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid)) {\n      addToEffected(dataZoomModel);\n    }\n  }); // Start from the given dataZoomModels, travel the graph to find\n  // all of the linked dataZoom models.\n\n  var foundNewLink;\n  do {\n    foundNewLink = false;\n    ecModel.eachComponent('dataZoom', processSingle);\n  } while (foundNewLink);\n  function processSingle(dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid) && isLinked(dataZoomModel)) {\n      addToEffected(dataZoomModel);\n      foundNewLink = true;\n    }\n  }\n  function addToEffected(dataZoom) {\n    effectedModelMap.set(dataZoom.uid, true);\n    effectedModels.push(dataZoom);\n    markAxisControlled(dataZoom);\n  }\n  function isLinked(dataZoomModel) {\n    var isLink = false;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var axisIdxArr = axisRecords.get(axisDim);\n      if (axisIdxArr && axisIdxArr[axisIndex]) {\n        isLink = true;\n      }\n    });\n    return isLink;\n  }\n  function markAxisControlled(dataZoomModel) {\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      (axisRecords.get(axisDim) || axisRecords.set(axisDim, []))[axisIndex] = true;\n    });\n  }\n  return effectedModels;\n}\n/**\n * Find the first target coordinate system.\n * Available after model built.\n *\n * @return Like {\n *                  grid: [\n *                      {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n *                      {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n *                      ...\n *                  ],  // cartesians must not be null/undefined.\n *                  polar: [\n *                      {model: coord0, axisModels: [axis4], coordIndex: 0},\n *                      ...\n *                  ],  // polars must not be null/undefined.\n *                  singleAxis: [\n *                      {model: coord0, axisModels: [], coordIndex: 0}\n *                  ]\n *              }\n */\n\nexport function collectReferCoordSysModelInfo(dataZoomModel) {\n  var ecModel = dataZoomModel.ecModel;\n  var coordSysInfoWrap = {\n    infoList: [],\n    infoMap: createHashMap()\n  };\n  dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n    var axisModel = ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n    if (!axisModel) {\n      return;\n    }\n    var coordSysModel = axisModel.getCoordSysModel();\n    if (!coordSysModel) {\n      return;\n    }\n    var coordSysUid = coordSysModel.uid;\n    var coordSysInfo = coordSysInfoWrap.infoMap.get(coordSysUid);\n    if (!coordSysInfo) {\n      coordSysInfo = {\n        model: coordSysModel,\n        axisModels: []\n      };\n      coordSysInfoWrap.infoList.push(coordSysInfo);\n      coordSysInfoWrap.infoMap.set(coordSysUid, coordSysInfo);\n    }\n    coordSysInfo.axisModels.push(axisModel);\n  });\n  return coordSysInfoWrap;\n}","map":{"version":3,"names":["indexOf","createHashMap","assert","DATA_ZOOM_AXIS_DIMENSIONS","SERIES_COORDS","isCoordSupported","seriesModel","coordType","get","getAxisMainType","axisDim","process","env","NODE_ENV","getAxisIndexPropName","getAxisIdPropName","findEffectedDataZooms","ecModel","payload","axisRecords","effectedModels","effectedModelMap","eachComponent","mainType","query","dataZoomModel","uid","addToEffected","foundNewLink","processSingle","isLinked","dataZoom","set","push","markAxisControlled","isLink","eachTargetAxis","axisIndex","axisIdxArr","collectReferCoordSysModelInfo","coordSysInfoWrap","infoList","infoMap","axisModel","getComponent","coordSysModel","getCoordSysModel","coordSysUid","coordSysInfo","model","axisModels"],"sources":["F:/idea_Project_2023/design_3/project/node_modules/echarts/lib/component/dataZoom/helper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { indexOf, createHashMap, assert } from 'zrender/lib/core/util.js';\nexport var DATA_ZOOM_AXIS_DIMENSIONS = ['x', 'y', 'radius', 'angle', 'single']; // Supported coords.\n// FIXME: polar has been broken (but rarely used).\n\nvar SERIES_COORDS = ['cartesian2d', 'polar', 'singleAxis'];\nexport function isCoordSupported(seriesModel) {\n  var coordType = seriesModel.get('coordinateSystem');\n  return indexOf(SERIES_COORDS, coordType) >= 0;\n}\nexport function getAxisMainType(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n\n  return axisDim + 'Axis';\n}\nexport function getAxisIndexPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n\n  return axisDim + 'AxisIndex';\n}\nexport function getAxisIdPropName(axisDim) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(axisDim);\n  }\n\n  return axisDim + 'AxisId';\n}\n/**\n * If two dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * This function finds all linked dataZoomModels start from the given payload.\n */\n\nexport function findEffectedDataZooms(ecModel, payload) {\n  // Key: `DataZoomAxisDimension`\n  var axisRecords = createHashMap();\n  var effectedModels = []; // Key: uid of dataZoomModel\n\n  var effectedModelMap = createHashMap(); // Find the dataZooms specified by payload.\n\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid)) {\n      addToEffected(dataZoomModel);\n    }\n  }); // Start from the given dataZoomModels, travel the graph to find\n  // all of the linked dataZoom models.\n\n  var foundNewLink;\n\n  do {\n    foundNewLink = false;\n    ecModel.eachComponent('dataZoom', processSingle);\n  } while (foundNewLink);\n\n  function processSingle(dataZoomModel) {\n    if (!effectedModelMap.get(dataZoomModel.uid) && isLinked(dataZoomModel)) {\n      addToEffected(dataZoomModel);\n      foundNewLink = true;\n    }\n  }\n\n  function addToEffected(dataZoom) {\n    effectedModelMap.set(dataZoom.uid, true);\n    effectedModels.push(dataZoom);\n    markAxisControlled(dataZoom);\n  }\n\n  function isLinked(dataZoomModel) {\n    var isLink = false;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var axisIdxArr = axisRecords.get(axisDim);\n\n      if (axisIdxArr && axisIdxArr[axisIndex]) {\n        isLink = true;\n      }\n    });\n    return isLink;\n  }\n\n  function markAxisControlled(dataZoomModel) {\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      (axisRecords.get(axisDim) || axisRecords.set(axisDim, []))[axisIndex] = true;\n    });\n  }\n\n  return effectedModels;\n}\n/**\n * Find the first target coordinate system.\n * Available after model built.\n *\n * @return Like {\n *                  grid: [\n *                      {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n *                      {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n *                      ...\n *                  ],  // cartesians must not be null/undefined.\n *                  polar: [\n *                      {model: coord0, axisModels: [axis4], coordIndex: 0},\n *                      ...\n *                  ],  // polars must not be null/undefined.\n *                  singleAxis: [\n *                      {model: coord0, axisModels: [], coordIndex: 0}\n *                  ]\n *              }\n */\n\nexport function collectReferCoordSysModelInfo(dataZoomModel) {\n  var ecModel = dataZoomModel.ecModel;\n  var coordSysInfoWrap = {\n    infoList: [],\n    infoMap: createHashMap()\n  };\n  dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n    var axisModel = ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n\n    if (!axisModel) {\n      return;\n    }\n\n    var coordSysModel = axisModel.getCoordSysModel();\n\n    if (!coordSysModel) {\n      return;\n    }\n\n    var coordSysUid = coordSysModel.uid;\n    var coordSysInfo = coordSysInfoWrap.infoMap.get(coordSysUid);\n\n    if (!coordSysInfo) {\n      coordSysInfo = {\n        model: coordSysModel,\n        axisModels: []\n      };\n      coordSysInfoWrap.infoList.push(coordSysInfo);\n      coordSysInfoWrap.infoMap.set(coordSysUid, coordSysInfo);\n    }\n\n    coordSysInfo.axisModels.push(axisModel);\n  });\n  return coordSysInfoWrap;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}