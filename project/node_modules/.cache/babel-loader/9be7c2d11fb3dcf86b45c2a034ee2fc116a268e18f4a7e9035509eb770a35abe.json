{"ast":null,"code":"export default {\n  name: \"ClientUser\",\n  data() {\n    return {\n      form: {},\n      user: {}\n    };\n  },\n  created() {\n    this.getUser().then(res => {\n      console.log(res);\n      this.form = res;\n    });\n  },\n  methods: {\n    async getUser() {\n      return (await this.request.get(\"http://localhost:9090/user/username/\" + this.user.username)).data;\n    },\n    save() {\n      this.request.post(\"http://localhost:9090/user\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"保存成功\");\n\n          // 触发父级更新User的方法\n          this.$emit(\"refreshUser\");\n\n          // 更新浏览器存储的用户信息\n          this.getUser().then(res => {\n            res.token = JSON.parse(localStorage.getItem(\"user\")).token;\n            localStorage.setItem(\"user\", JSON.stringify(res));\n          });\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    handleAvatarSuccess(res) {\n      this.form.avatarUrl = res;\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","created","getUser","then","res","console","log","methods","request","get","username","save","post","code","$message","success","$emit","token","JSON","parse","localStorage","getItem","setItem","stringify","error","handleAvatarSuccess","avatarUrl"],"sources":["src/views/ClientView/ClientUser.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width: 500px;\">\r\n    <el-form label-width=\"80px\" size=\"small\">\r\n      <el-upload\r\n          class=\"avatar-uploader\"\r\n          action=\"http://localhost:9090/file/upload\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\"\r\n      >\r\n        <img v-if=\"form.avatarUrl\" :src=\"form.avatarUrl\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      </el-upload>\r\n\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"form.username\" disabled autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"昵称\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\">\r\n        <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"地址\">\r\n        <el-input type=\"textarea\" v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: \"ClientUser\",\r\n  data() {\r\n    return {\r\n\r\n      form: {},\r\n      user: {}\r\n    }\r\n  },\r\n  created() {\r\n    this.getUser().then(res => {\r\n      console.log(res)\r\n      this.form = res\r\n    })\r\n  },\r\n  methods: {\r\n    async getUser() {\r\n      return (await this.request.get(\"http://localhost:9090/user/username/\" + this.user.username)).data\r\n\r\n    },\r\n    save() {\r\n      this.request.post(\"http://localhost:9090/user\", this.form).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"保存成功\")\r\n\r\n          // 触发父级更新User的方法\r\n          this.$emit(\"refreshUser\")\r\n\r\n          // 更新浏览器存储的用户信息\r\n          this.getUser().then(res => {\r\n            res.token = JSON.parse(localStorage.getItem(\"user\")).token\r\n            localStorage.setItem(\"user\", JSON.stringify(res))\r\n          })\r\n\r\n        } else {\r\n          this.$message.error(\"保存失败\")\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(res) {\r\n      this.form.avatarUrl = res\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader {\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 138px;\r\n  height: 138px;\r\n  line-height: 138px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 138px;\r\n  height: 138px;\r\n  display: block;\r\n}\r\n</style>\r\n"],"mappings":"AAsCA;EACAA,IAAA;EACAC,KAAA;IACA;MAEAC,IAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA,GAAAC,IAAA,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA,KAAAL,IAAA,GAAAK,GAAA;IACA;EACA;EACAG,OAAA;IACA,MAAAL,QAAA;MACA,mBAAAM,OAAA,CAAAC,GAAA,+CAAAT,IAAA,CAAAU,QAAA,GAAAZ,IAAA;IAEA;IACAa,KAAA;MACA,KAAAH,OAAA,CAAAI,IAAA,oCAAAb,IAAA,EAAAI,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAS,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;;UAEA;UACA,KAAAC,KAAA;;UAEA;UACA,KAAAd,OAAA,GAAAC,IAAA,CAAAC,GAAA;YACAA,GAAA,CAAAa,KAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,UAAAJ,KAAA;YACAG,YAAA,CAAAE,OAAA,SAAAJ,IAAA,CAAAK,SAAA,CAAAnB,GAAA;UACA;QAEA;UACA,KAAAU,QAAA,CAAAU,KAAA;QACA;MACA;IACA;IACAC,oBAAArB,GAAA;MACA,KAAAL,IAAA,CAAA2B,SAAA,GAAAtB,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}