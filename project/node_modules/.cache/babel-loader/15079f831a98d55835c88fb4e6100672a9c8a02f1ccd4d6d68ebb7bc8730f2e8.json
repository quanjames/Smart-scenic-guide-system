{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\nimport SingleAxis from './SingleAxis.js';\nimport * as axisHelper from '../axisHelper.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport { each } from 'zrender/lib/core/util.js';\nexport var singleDimensions = ['single'];\n/**\n * Create a single coordinates system.\n */\n\nvar Single = /** @class */\nfunction () {\n  function Single(axisModel, ecModel, api) {\n    this.type = 'single';\n    this.dimension = 'single';\n    /**\n     * Add it just for draw tooltip.\n     */\n\n    this.dimensions = singleDimensions;\n    this.axisPointerEnabled = true;\n    this.model = axisModel;\n    this._init(axisModel, ecModel, api);\n  }\n  /**\n   * Initialize single coordinate system.\n   */\n\n  Single.prototype._init = function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  };\n  /**\n   * Update axis scale after data processed\n   */\n\n  Single.prototype.update = function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data_1 = seriesModel.getData();\n        each(data_1.mapDimensionsAll(this.dimension), function (dim) {\n          this._axis.scale.unionExtentFromData(data_1, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  };\n  /**\n   * Resize the single coordinate system.\n   */\n\n  Single.prototype.resize = function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    this._adjustAxis();\n  };\n  Single.prototype.getRect = function () {\n    return this._rect;\n  };\n  Single.prototype._adjustAxis = function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.inverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  };\n  Single.prototype._updateAxisTransform = function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  };\n  /**\n   * Get axis.\n   */\n\n  Single.prototype.getAxis = function () {\n    return this._axis;\n  };\n  /**\n   * Get axis, add it just for draw tooltip.\n   */\n\n  Single.prototype.getBaseAxis = function () {\n    return this._axis;\n  };\n  Single.prototype.getAxes = function () {\n    return [this._axis];\n  };\n  Single.prototype.getTooltipAxes = function () {\n    return {\n      baseAxes: [this.getAxis()],\n      // Empty otherAxes\n      otherAxes: []\n    };\n  };\n  /**\n   * If contain point.\n   */\n\n  Single.prototype.containPoint = function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  };\n  Single.prototype.pointToData = function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  };\n  /**\n   * Convert the series data to concrete point.\n   * Can be [val] | val\n   */\n\n  Single.prototype.dataToPoint = function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n    if (val instanceof Array) {\n      val = val[0];\n    }\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  };\n  Single.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? this.dataToPoint(value) : null;\n  };\n  Single.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? this.pointToData(pixel) : null;\n  };\n  return Single;\n}();\nfunction getCoordSys(finder) {\n  var seriesModel = finder.seriesModel;\n  var singleModel = finder.singleAxisModel;\n  return singleModel && singleModel.coordinateSystem || seriesModel && seriesModel.coordinateSystem;\n}\nexport default Single;","map":{"version":3,"names":["SingleAxis","axisHelper","getLayoutRect","each","singleDimensions","Single","axisModel","ecModel","api","type","dimension","dimensions","axisPointerEnabled","model","_init","prototype","dim","axis","createScaleByModel","get","isCategory","onBand","inverse","orient","coordinateSystem","_axis","update","eachSeries","seriesModel","data_1","getData","mapDimensionsAll","scale","unionExtentFromData","niceScaleExtent","resize","_rect","left","top","right","bottom","width","height","getWidth","getHeight","_adjustAxis","getRect","rect","isHorizontal","extent","idx","setExtent","_updateAxisTransform","x","y","coordBase","axisExtent","getExtent","extentSum","toGlobalCoord","coord","toLocalCoord","getAxis","getBaseAxis","getAxes","getTooltipAxes","baseAxes","otherAxes","containPoint","point","contain","pointToData","coordToData","dataToPoint","val","pt","Array","dataToCoord","convertToPixel","finder","value","coordSys","getCoordSys","convertFromPixel","pixel","singleModel","singleAxisModel"],"sources":["F:/idea_Project_2023/design_3/project/node_modules/echarts/lib/coord/single/Single.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\nimport SingleAxis from './SingleAxis.js';\nimport * as axisHelper from '../axisHelper.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport { each } from 'zrender/lib/core/util.js';\nexport var singleDimensions = ['single'];\n/**\n * Create a single coordinates system.\n */\n\nvar Single =\n/** @class */\nfunction () {\n  function Single(axisModel, ecModel, api) {\n    this.type = 'single';\n    this.dimension = 'single';\n    /**\n     * Add it just for draw tooltip.\n     */\n\n    this.dimensions = singleDimensions;\n    this.axisPointerEnabled = true;\n    this.model = axisModel;\n\n    this._init(axisModel, ecModel, api);\n  }\n  /**\n   * Initialize single coordinate system.\n   */\n\n\n  Single.prototype._init = function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  };\n  /**\n   * Update axis scale after data processed\n   */\n\n\n  Single.prototype.update = function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data_1 = seriesModel.getData();\n        each(data_1.mapDimensionsAll(this.dimension), function (dim) {\n          this._axis.scale.unionExtentFromData(data_1, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  };\n  /**\n   * Resize the single coordinate system.\n   */\n\n\n  Single.prototype.resize = function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  };\n\n  Single.prototype.getRect = function () {\n    return this._rect;\n  };\n\n  Single.prototype._adjustAxis = function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.inverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  };\n\n  Single.prototype._updateAxisTransform = function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  };\n  /**\n   * Get axis.\n   */\n\n\n  Single.prototype.getAxis = function () {\n    return this._axis;\n  };\n  /**\n   * Get axis, add it just for draw tooltip.\n   */\n\n\n  Single.prototype.getBaseAxis = function () {\n    return this._axis;\n  };\n\n  Single.prototype.getAxes = function () {\n    return [this._axis];\n  };\n\n  Single.prototype.getTooltipAxes = function () {\n    return {\n      baseAxes: [this.getAxis()],\n      // Empty otherAxes\n      otherAxes: []\n    };\n  };\n  /**\n   * If contain point.\n   */\n\n\n  Single.prototype.containPoint = function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  };\n\n  Single.prototype.pointToData = function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  };\n  /**\n   * Convert the series data to concrete point.\n   * Can be [val] | val\n   */\n\n\n  Single.prototype.dataToPoint = function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  };\n\n  Single.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? this.dataToPoint(value) : null;\n  };\n\n  Single.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? this.pointToData(pixel) : null;\n  };\n\n  return Single;\n}();\n\nfunction getCoordSys(finder) {\n  var seriesModel = finder.seriesModel;\n  var singleModel = finder.singleAxisModel;\n  return singleModel && singleModel.coordinateSystem || seriesModel && seriesModel.coordinateSystem;\n}\n\nexport default Single;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}