{"ast":null,"code":"import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of synced model and prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param  event event name\n * @param options options\n * @return PropertyDecorator\n */\nexport function ModelSync(propName, event, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return function (target, key) {\n    applyMetadata(options, target, key);\n    createDecorator(function (componentOptions, k) {\n      ;\n      (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n      componentOptions.model = {\n        prop: propName,\n        event: event || k\n      };\n      (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n        get: function () {\n          return this[propName];\n        },\n        set: function (value) {\n          // @ts-ignore\n          this.$emit(event, value);\n        }\n      };\n    })(target, key);\n  };\n}","map":{"version":3,"names":["createDecorator","applyMetadata","ModelSync","propName","event","options","target","key","componentOptions","k","props","model","prop","computed","get","set","value","$emit"],"sources":["G:/VueProject/project/node_modules/vue-property-decorator/lib/decorators/ModelSync.js"],"sourcesContent":["import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of synced model and prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param  event event name\n * @param options options\n * @return PropertyDecorator\n */\nexport function ModelSync(propName, event, options) {\n    if (options === void 0) { options = {}; }\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n            componentOptions.model = { prop: propName, event: event || k };\n            (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n                get: function () {\n                    return this[propName];\n                },\n                set: function (value) {\n                    // @ts-ignore\n                    this.$emit(event, value);\n                },\n            };\n        })(target, key);\n    };\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,qBAAqB;AACrD,SAASC,aAAa,QAAQ,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAChD,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAG,CAAC,CAAC;EAAE;EACxC,OAAO,UAAUC,MAAM,EAAEC,GAAG,EAAE;IAC1BN,aAAa,CAACI,OAAO,EAAEC,MAAM,EAAEC,GAAG,CAAC;IACnCP,eAAe,CAAC,UAAUQ,gBAAgB,EAAEC,CAAC,EAAE;MAC3C;MACA,CAACD,gBAAgB,CAACE,KAAK,KAAKF,gBAAgB,CAACE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAEP,QAAQ,CAAC,GAAGE,OAAO;MAC7EG,gBAAgB,CAACG,KAAK,GAAG;QAAEC,IAAI,EAAET,QAAQ;QAAEC,KAAK,EAAEA,KAAK,IAAIK;MAAE,CAAC;MAC9D,CAACD,gBAAgB,CAACK,QAAQ,KAAKL,gBAAgB,CAACK,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAEJ,CAAC,CAAC,GAAG;QACjEK,GAAG,EAAE,SAAAA,CAAA,EAAY;UACb,OAAO,IAAI,CAACX,QAAQ,CAAC;QACzB,CAAC;QACDY,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;UAClB;UACA,IAAI,CAACC,KAAK,CAACb,KAAK,EAAEY,KAAK,CAAC;QAC5B;MACJ,CAAC;IACL,CAAC,CAAC,CAACV,MAAM,EAAEC,GAAG,CAAC;EACnB,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}